// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/VapiAI/server-sdk-go/internal"
	time "time"
)

type UpdateWorkflowDto struct {
	Nodes []*UpdateWorkflowDtoNodesItem `json:"nodes,omitempty" url:"-"`
	// This is the transcriber for the workflow.
	//
	// This can be overridden at node level using `nodes[n].transcriber`.
	Transcriber *UpdateWorkflowDtoTranscriber `json:"transcriber,omitempty" url:"-"`
	// This is the voice for the workflow.
	//
	// This can be overridden at node level using `nodes[n].voice`.
	Voice *UpdateWorkflowDtoVoice `json:"voice,omitempty" url:"-"`
	// This is the plan for observability of workflow's calls.
	//
	// Currently, only Langfuse is supported.
	ObservabilityPlan *LangfuseObservabilityPlan `json:"observabilityPlan,omitempty" url:"-"`
	// These are dynamic credentials that will be used for the workflow calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials.
	Credentials  []*UpdateWorkflowDtoCredentialsItem `json:"credentials,omitempty" url:"-"`
	Name         *string                             `json:"name,omitempty" url:"-"`
	Edges        []*Edge                             `json:"edges,omitempty" url:"-"`
	GlobalPrompt *string                             `json:"globalPrompt,omitempty" url:"-"`
	// This is where Vapi will send webhooks. You can find all webhooks available along with their shape in ServerMessage schema.
	//
	// The order of precedence is:
	//
	// 1. tool.server
	// 2. workflow.server / assistant.server
	// 3. phoneNumber.server
	// 4. org.server
	Server *Server `json:"server,omitempty" url:"-"`
	// This is the compliance plan for the workflow. It allows you to configure HIPAA and other compliance settings.
	CompliancePlan *CompliancePlan `json:"compliancePlan,omitempty" url:"-"`
	// This is the plan for analysis of workflow's calls. Stored in `call.analysis`.
	AnalysisPlan *AnalysisPlan `json:"analysisPlan,omitempty" url:"-"`
	// This is the plan for artifacts generated during workflow's calls. Stored in `call.artifact`.
	ArtifactPlan *ArtifactPlan `json:"artifactPlan,omitempty" url:"-"`
	// This is the plan for when the workflow nodes should start talking.
	//
	// You should configure this if you're running into these issues:
	// - The assistant is too slow to start talking after the customer is done speaking.
	// - The assistant is too fast to start talking after the customer is done speaking.
	// - The assistant is so fast that it's actually interrupting the customer.
	StartSpeakingPlan *StartSpeakingPlan `json:"startSpeakingPlan,omitempty" url:"-"`
	// This is the plan for when workflow nodes should stop talking on customer interruption.
	//
	// You should configure this if you're running into these issues:
	// - The assistant is too slow to recognize customer's interruption.
	// - The assistant is too fast to recognize customer's interruption.
	// - The assistant is getting interrupted by phrases that are just acknowledgments.
	// - The assistant is getting interrupted by background noises.
	// - The assistant is not properly stopping -- it starts talking right after getting interrupted.
	StopSpeakingPlan *StopSpeakingPlan `json:"stopSpeakingPlan,omitempty" url:"-"`
	// This is the plan for real-time monitoring of the workflow's calls.
	//
	// Usage:
	// - To enable live listening of the workflow's calls, set `monitorPlan.listenEnabled` to `true`.
	// - To enable live control of the workflow's calls, set `monitorPlan.controlEnabled` to `true`.
	MonitorPlan *MonitorPlan `json:"monitorPlan,omitempty" url:"-"`
	// This enables filtering of noise and background speech while the user is talking.
	//
	// Features:
	// - Smart denoising using Krisp
	// - Fourier denoising
	//
	// Both can be used together. Order of precedence:
	// - Smart denoising
	// - Fourier denoising
	BackgroundSpeechDenoisingPlan *BackgroundSpeechDenoisingPlan `json:"backgroundSpeechDenoisingPlan,omitempty" url:"-"`
	// These are the credentials that will be used for the workflow calls. By default, all the credentials are available for use in the call but you can provide a subset using this.
	CredentialIds []string `json:"credentialIds,omitempty" url:"-"`
}

type Workflow struct {
	Nodes []*WorkflowNodesItem `json:"nodes,omitempty" url:"nodes,omitempty"`
	// This is the transcriber for the workflow.
	//
	// This can be overridden at node level using `nodes[n].transcriber`.
	Transcriber *WorkflowTranscriber `json:"transcriber,omitempty" url:"transcriber,omitempty"`
	// This is the voice for the workflow.
	//
	// This can be overridden at node level using `nodes[n].voice`.
	Voice *WorkflowVoice `json:"voice,omitempty" url:"voice,omitempty"`
	// This is the plan for observability of workflow's calls.
	//
	// Currently, only Langfuse is supported.
	ObservabilityPlan *LangfuseObservabilityPlan `json:"observabilityPlan,omitempty" url:"observabilityPlan,omitempty"`
	// These are dynamic credentials that will be used for the workflow calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials.
	Credentials  []*WorkflowCredentialsItem `json:"credentials,omitempty" url:"credentials,omitempty"`
	Id           string                     `json:"id" url:"id"`
	OrgId        string                     `json:"orgId" url:"orgId"`
	CreatedAt    time.Time                  `json:"createdAt" url:"createdAt"`
	UpdatedAt    time.Time                  `json:"updatedAt" url:"updatedAt"`
	Name         string                     `json:"name" url:"name"`
	Edges        []*Edge                    `json:"edges,omitempty" url:"edges,omitempty"`
	GlobalPrompt *string                    `json:"globalPrompt,omitempty" url:"globalPrompt,omitempty"`
	// This is where Vapi will send webhooks. You can find all webhooks available along with their shape in ServerMessage schema.
	//
	// The order of precedence is:
	//
	// 1. tool.server
	// 2. workflow.server / assistant.server
	// 3. phoneNumber.server
	// 4. org.server
	Server *Server `json:"server,omitempty" url:"server,omitempty"`
	// This is the compliance plan for the workflow. It allows you to configure HIPAA and other compliance settings.
	CompliancePlan *CompliancePlan `json:"compliancePlan,omitempty" url:"compliancePlan,omitempty"`
	// This is the plan for analysis of workflow's calls. Stored in `call.analysis`.
	AnalysisPlan *AnalysisPlan `json:"analysisPlan,omitempty" url:"analysisPlan,omitempty"`
	// This is the plan for artifacts generated during workflow's calls. Stored in `call.artifact`.
	ArtifactPlan *ArtifactPlan `json:"artifactPlan,omitempty" url:"artifactPlan,omitempty"`
	// This is the plan for when the workflow nodes should start talking.
	//
	// You should configure this if you're running into these issues:
	// - The assistant is too slow to start talking after the customer is done speaking.
	// - The assistant is too fast to start talking after the customer is done speaking.
	// - The assistant is so fast that it's actually interrupting the customer.
	StartSpeakingPlan *StartSpeakingPlan `json:"startSpeakingPlan,omitempty" url:"startSpeakingPlan,omitempty"`
	// This is the plan for when workflow nodes should stop talking on customer interruption.
	//
	// You should configure this if you're running into these issues:
	// - The assistant is too slow to recognize customer's interruption.
	// - The assistant is too fast to recognize customer's interruption.
	// - The assistant is getting interrupted by phrases that are just acknowledgments.
	// - The assistant is getting interrupted by background noises.
	// - The assistant is not properly stopping -- it starts talking right after getting interrupted.
	StopSpeakingPlan *StopSpeakingPlan `json:"stopSpeakingPlan,omitempty" url:"stopSpeakingPlan,omitempty"`
	// This is the plan for real-time monitoring of the workflow's calls.
	//
	// Usage:
	// - To enable live listening of the workflow's calls, set `monitorPlan.listenEnabled` to `true`.
	// - To enable live control of the workflow's calls, set `monitorPlan.controlEnabled` to `true`.
	MonitorPlan *MonitorPlan `json:"monitorPlan,omitempty" url:"monitorPlan,omitempty"`
	// This enables filtering of noise and background speech while the user is talking.
	//
	// Features:
	// - Smart denoising using Krisp
	// - Fourier denoising
	//
	// Both can be used together. Order of precedence:
	// - Smart denoising
	// - Fourier denoising
	BackgroundSpeechDenoisingPlan *BackgroundSpeechDenoisingPlan `json:"backgroundSpeechDenoisingPlan,omitempty" url:"backgroundSpeechDenoisingPlan,omitempty"`
	// These are the credentials that will be used for the workflow calls. By default, all the credentials are available for use in the call but you can provide a subset using this.
	CredentialIds []string `json:"credentialIds,omitempty" url:"credentialIds,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (w *Workflow) GetNodes() []*WorkflowNodesItem {
	if w == nil {
		return nil
	}
	return w.Nodes
}

func (w *Workflow) GetTranscriber() *WorkflowTranscriber {
	if w == nil {
		return nil
	}
	return w.Transcriber
}

func (w *Workflow) GetVoice() *WorkflowVoice {
	if w == nil {
		return nil
	}
	return w.Voice
}

func (w *Workflow) GetObservabilityPlan() *LangfuseObservabilityPlan {
	if w == nil {
		return nil
	}
	return w.ObservabilityPlan
}

func (w *Workflow) GetCredentials() []*WorkflowCredentialsItem {
	if w == nil {
		return nil
	}
	return w.Credentials
}

func (w *Workflow) GetId() string {
	if w == nil {
		return ""
	}
	return w.Id
}

func (w *Workflow) GetOrgId() string {
	if w == nil {
		return ""
	}
	return w.OrgId
}

func (w *Workflow) GetCreatedAt() time.Time {
	if w == nil {
		return time.Time{}
	}
	return w.CreatedAt
}

func (w *Workflow) GetUpdatedAt() time.Time {
	if w == nil {
		return time.Time{}
	}
	return w.UpdatedAt
}

func (w *Workflow) GetName() string {
	if w == nil {
		return ""
	}
	return w.Name
}

func (w *Workflow) GetEdges() []*Edge {
	if w == nil {
		return nil
	}
	return w.Edges
}

func (w *Workflow) GetGlobalPrompt() *string {
	if w == nil {
		return nil
	}
	return w.GlobalPrompt
}

func (w *Workflow) GetServer() *Server {
	if w == nil {
		return nil
	}
	return w.Server
}

func (w *Workflow) GetCompliancePlan() *CompliancePlan {
	if w == nil {
		return nil
	}
	return w.CompliancePlan
}

func (w *Workflow) GetAnalysisPlan() *AnalysisPlan {
	if w == nil {
		return nil
	}
	return w.AnalysisPlan
}

func (w *Workflow) GetArtifactPlan() *ArtifactPlan {
	if w == nil {
		return nil
	}
	return w.ArtifactPlan
}

func (w *Workflow) GetStartSpeakingPlan() *StartSpeakingPlan {
	if w == nil {
		return nil
	}
	return w.StartSpeakingPlan
}

func (w *Workflow) GetStopSpeakingPlan() *StopSpeakingPlan {
	if w == nil {
		return nil
	}
	return w.StopSpeakingPlan
}

func (w *Workflow) GetMonitorPlan() *MonitorPlan {
	if w == nil {
		return nil
	}
	return w.MonitorPlan
}

func (w *Workflow) GetBackgroundSpeechDenoisingPlan() *BackgroundSpeechDenoisingPlan {
	if w == nil {
		return nil
	}
	return w.BackgroundSpeechDenoisingPlan
}

func (w *Workflow) GetCredentialIds() []string {
	if w == nil {
		return nil
	}
	return w.CredentialIds
}

func (w *Workflow) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *Workflow) UnmarshalJSON(data []byte) error {
	type embed Workflow
	var unmarshaler = struct {
		embed
		CreatedAt *internal.DateTime `json:"createdAt"`
		UpdatedAt *internal.DateTime `json:"updatedAt"`
	}{
		embed: embed(*w),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*w = Workflow(unmarshaler.embed)
	w.CreatedAt = unmarshaler.CreatedAt.Time()
	w.UpdatedAt = unmarshaler.UpdatedAt.Time()
	extraProperties, err := internal.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties
	w.rawJSON = json.RawMessage(data)
	return nil
}

func (w *Workflow) MarshalJSON() ([]byte, error) {
	type embed Workflow
	var marshaler = struct {
		embed
		CreatedAt *internal.DateTime `json:"createdAt"`
		UpdatedAt *internal.DateTime `json:"updatedAt"`
	}{
		embed:     embed(*w),
		CreatedAt: internal.NewDateTime(w.CreatedAt),
		UpdatedAt: internal.NewDateTime(w.UpdatedAt),
	}
	return json.Marshal(marshaler)
}

func (w *Workflow) String() string {
	if len(w.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(w.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}

type WorkflowCredentialsItem struct {
	CreateElevenLabsCredentialDto                        *CreateElevenLabsCredentialDto
	CreateAnthropicCredentialDto                         *CreateAnthropicCredentialDto
	CreateAnyscaleCredentialDto                          *CreateAnyscaleCredentialDto
	CreateAssemblyAiCredentialDto                        *CreateAssemblyAiCredentialDto
	CreateAzureOpenAiCredentialDto                       *CreateAzureOpenAiCredentialDto
	CreateAzureCredentialDto                             *CreateAzureCredentialDto
	CreateByoSipTrunkCredentialDto                       *CreateByoSipTrunkCredentialDto
	CreateCartesiaCredentialDto                          *CreateCartesiaCredentialDto
	CreateCerebrasCredentialDto                          *CreateCerebrasCredentialDto
	CreateCloudflareCredentialDto                        *CreateCloudflareCredentialDto
	CreateCustomLlmCredentialDto                         *CreateCustomLlmCredentialDto
	CreateDeepgramCredentialDto                          *CreateDeepgramCredentialDto
	CreateDeepInfraCredentialDto                         *CreateDeepInfraCredentialDto
	CreateDeepSeekCredentialDto                          *CreateDeepSeekCredentialDto
	CreateGcpCredentialDto                               *CreateGcpCredentialDto
	CreateGladiaCredentialDto                            *CreateGladiaCredentialDto
	CreateGoHighLevelCredentialDto                       *CreateGoHighLevelCredentialDto
	CreateGoogleCredentialDto                            *CreateGoogleCredentialDto
	CreateGroqCredentialDto                              *CreateGroqCredentialDto
	CreateInflectionAiCredentialDto                      *CreateInflectionAiCredentialDto
	CreateLangfuseCredentialDto                          *CreateLangfuseCredentialDto
	CreateLmntCredentialDto                              *CreateLmntCredentialDto
	CreateMakeCredentialDto                              *CreateMakeCredentialDto
	CreateOpenAiCredentialDto                            *CreateOpenAiCredentialDto
	CreateOpenRouterCredentialDto                        *CreateOpenRouterCredentialDto
	CreatePerplexityAiCredentialDto                      *CreatePerplexityAiCredentialDto
	CreatePlayHtCredentialDto                            *CreatePlayHtCredentialDto
	CreateRimeAiCredentialDto                            *CreateRimeAiCredentialDto
	CreateRunpodCredentialDto                            *CreateRunpodCredentialDto
	CreateS3CredentialDto                                *CreateS3CredentialDto
	CreateSupabaseCredentialDto                          *CreateSupabaseCredentialDto
	CreateSmallestAiCredentialDto                        *CreateSmallestAiCredentialDto
	CreateTavusCredentialDto                             *CreateTavusCredentialDto
	CreateTogetherAiCredentialDto                        *CreateTogetherAiCredentialDto
	CreateTwilioCredentialDto                            *CreateTwilioCredentialDto
	CreateVonageCredentialDto                            *CreateVonageCredentialDto
	CreateWebhookCredentialDto                           *CreateWebhookCredentialDto
	CreateXAiCredentialDto                               *CreateXAiCredentialDto
	CreateNeuphonicCredentialDto                         *CreateNeuphonicCredentialDto
	CreateHumeCredentialDto                              *CreateHumeCredentialDto
	CreateMistralCredentialDto                           *CreateMistralCredentialDto
	CreateSpeechmaticsCredentialDto                      *CreateSpeechmaticsCredentialDto
	CreateTrieveCredentialDto                            *CreateTrieveCredentialDto
	CreateGoogleCalendarOAuth2ClientCredentialDto        *CreateGoogleCalendarOAuth2ClientCredentialDto
	CreateGoogleCalendarOAuth2AuthorizationCredentialDto *CreateGoogleCalendarOAuth2AuthorizationCredentialDto
	CreateGoogleSheetsOAuth2AuthorizationCredentialDto   *CreateGoogleSheetsOAuth2AuthorizationCredentialDto
	CreateSlackOAuth2AuthorizationCredentialDto          *CreateSlackOAuth2AuthorizationCredentialDto
	CreateGoHighLevelMcpCredentialDto                    *CreateGoHighLevelMcpCredentialDto

	typ string
}

func (w *WorkflowCredentialsItem) GetCreateElevenLabsCredentialDto() *CreateElevenLabsCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateElevenLabsCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateAnthropicCredentialDto() *CreateAnthropicCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateAnthropicCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateAnyscaleCredentialDto() *CreateAnyscaleCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateAnyscaleCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateAssemblyAiCredentialDto() *CreateAssemblyAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateAssemblyAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateAzureOpenAiCredentialDto() *CreateAzureOpenAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateAzureOpenAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateAzureCredentialDto() *CreateAzureCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateAzureCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateByoSipTrunkCredentialDto() *CreateByoSipTrunkCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateByoSipTrunkCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateCartesiaCredentialDto() *CreateCartesiaCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateCartesiaCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateCerebrasCredentialDto() *CreateCerebrasCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateCerebrasCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateCloudflareCredentialDto() *CreateCloudflareCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateCloudflareCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateCustomLlmCredentialDto() *CreateCustomLlmCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateCustomLlmCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateDeepgramCredentialDto() *CreateDeepgramCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateDeepgramCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateDeepInfraCredentialDto() *CreateDeepInfraCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateDeepInfraCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateDeepSeekCredentialDto() *CreateDeepSeekCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateDeepSeekCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGcpCredentialDto() *CreateGcpCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGcpCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGladiaCredentialDto() *CreateGladiaCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGladiaCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoHighLevelCredentialDto() *CreateGoHighLevelCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoHighLevelCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoogleCredentialDto() *CreateGoogleCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoogleCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGroqCredentialDto() *CreateGroqCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGroqCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateInflectionAiCredentialDto() *CreateInflectionAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateInflectionAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateLangfuseCredentialDto() *CreateLangfuseCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateLangfuseCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateLmntCredentialDto() *CreateLmntCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateLmntCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateMakeCredentialDto() *CreateMakeCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateMakeCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateOpenAiCredentialDto() *CreateOpenAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateOpenAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateOpenRouterCredentialDto() *CreateOpenRouterCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateOpenRouterCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreatePerplexityAiCredentialDto() *CreatePerplexityAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreatePerplexityAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreatePlayHtCredentialDto() *CreatePlayHtCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreatePlayHtCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateRimeAiCredentialDto() *CreateRimeAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateRimeAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateRunpodCredentialDto() *CreateRunpodCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateRunpodCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateS3CredentialDto() *CreateS3CredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateS3CredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateSupabaseCredentialDto() *CreateSupabaseCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateSupabaseCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateSmallestAiCredentialDto() *CreateSmallestAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateSmallestAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateTavusCredentialDto() *CreateTavusCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateTavusCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateTogetherAiCredentialDto() *CreateTogetherAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateTogetherAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateTwilioCredentialDto() *CreateTwilioCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateTwilioCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateVonageCredentialDto() *CreateVonageCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateVonageCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateWebhookCredentialDto() *CreateWebhookCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateWebhookCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateXAiCredentialDto() *CreateXAiCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateXAiCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateNeuphonicCredentialDto() *CreateNeuphonicCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateNeuphonicCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateHumeCredentialDto() *CreateHumeCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateHumeCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateMistralCredentialDto() *CreateMistralCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateMistralCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateSpeechmaticsCredentialDto() *CreateSpeechmaticsCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateSpeechmaticsCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateTrieveCredentialDto() *CreateTrieveCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateTrieveCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoogleCalendarOAuth2ClientCredentialDto() *CreateGoogleCalendarOAuth2ClientCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoogleCalendarOAuth2ClientCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoogleCalendarOAuth2AuthorizationCredentialDto() *CreateGoogleCalendarOAuth2AuthorizationCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoogleSheetsOAuth2AuthorizationCredentialDto() *CreateGoogleSheetsOAuth2AuthorizationCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateSlackOAuth2AuthorizationCredentialDto() *CreateSlackOAuth2AuthorizationCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateSlackOAuth2AuthorizationCredentialDto
}

func (w *WorkflowCredentialsItem) GetCreateGoHighLevelMcpCredentialDto() *CreateGoHighLevelMcpCredentialDto {
	if w == nil {
		return nil
	}
	return w.CreateGoHighLevelMcpCredentialDto
}

func (w *WorkflowCredentialsItem) UnmarshalJSON(data []byte) error {
	valueCreateElevenLabsCredentialDto := new(CreateElevenLabsCredentialDto)
	if err := json.Unmarshal(data, &valueCreateElevenLabsCredentialDto); err == nil {
		w.typ = "CreateElevenLabsCredentialDto"
		w.CreateElevenLabsCredentialDto = valueCreateElevenLabsCredentialDto
		return nil
	}
	valueCreateAnthropicCredentialDto := new(CreateAnthropicCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAnthropicCredentialDto); err == nil {
		w.typ = "CreateAnthropicCredentialDto"
		w.CreateAnthropicCredentialDto = valueCreateAnthropicCredentialDto
		return nil
	}
	valueCreateAnyscaleCredentialDto := new(CreateAnyscaleCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAnyscaleCredentialDto); err == nil {
		w.typ = "CreateAnyscaleCredentialDto"
		w.CreateAnyscaleCredentialDto = valueCreateAnyscaleCredentialDto
		return nil
	}
	valueCreateAssemblyAiCredentialDto := new(CreateAssemblyAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAssemblyAiCredentialDto); err == nil {
		w.typ = "CreateAssemblyAiCredentialDto"
		w.CreateAssemblyAiCredentialDto = valueCreateAssemblyAiCredentialDto
		return nil
	}
	valueCreateAzureOpenAiCredentialDto := new(CreateAzureOpenAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAzureOpenAiCredentialDto); err == nil {
		w.typ = "CreateAzureOpenAiCredentialDto"
		w.CreateAzureOpenAiCredentialDto = valueCreateAzureOpenAiCredentialDto
		return nil
	}
	valueCreateAzureCredentialDto := new(CreateAzureCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAzureCredentialDto); err == nil {
		w.typ = "CreateAzureCredentialDto"
		w.CreateAzureCredentialDto = valueCreateAzureCredentialDto
		return nil
	}
	valueCreateByoSipTrunkCredentialDto := new(CreateByoSipTrunkCredentialDto)
	if err := json.Unmarshal(data, &valueCreateByoSipTrunkCredentialDto); err == nil {
		w.typ = "CreateByoSipTrunkCredentialDto"
		w.CreateByoSipTrunkCredentialDto = valueCreateByoSipTrunkCredentialDto
		return nil
	}
	valueCreateCartesiaCredentialDto := new(CreateCartesiaCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCartesiaCredentialDto); err == nil {
		w.typ = "CreateCartesiaCredentialDto"
		w.CreateCartesiaCredentialDto = valueCreateCartesiaCredentialDto
		return nil
	}
	valueCreateCerebrasCredentialDto := new(CreateCerebrasCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCerebrasCredentialDto); err == nil {
		w.typ = "CreateCerebrasCredentialDto"
		w.CreateCerebrasCredentialDto = valueCreateCerebrasCredentialDto
		return nil
	}
	valueCreateCloudflareCredentialDto := new(CreateCloudflareCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCloudflareCredentialDto); err == nil {
		w.typ = "CreateCloudflareCredentialDto"
		w.CreateCloudflareCredentialDto = valueCreateCloudflareCredentialDto
		return nil
	}
	valueCreateCustomLlmCredentialDto := new(CreateCustomLlmCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCustomLlmCredentialDto); err == nil {
		w.typ = "CreateCustomLlmCredentialDto"
		w.CreateCustomLlmCredentialDto = valueCreateCustomLlmCredentialDto
		return nil
	}
	valueCreateDeepgramCredentialDto := new(CreateDeepgramCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepgramCredentialDto); err == nil {
		w.typ = "CreateDeepgramCredentialDto"
		w.CreateDeepgramCredentialDto = valueCreateDeepgramCredentialDto
		return nil
	}
	valueCreateDeepInfraCredentialDto := new(CreateDeepInfraCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepInfraCredentialDto); err == nil {
		w.typ = "CreateDeepInfraCredentialDto"
		w.CreateDeepInfraCredentialDto = valueCreateDeepInfraCredentialDto
		return nil
	}
	valueCreateDeepSeekCredentialDto := new(CreateDeepSeekCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepSeekCredentialDto); err == nil {
		w.typ = "CreateDeepSeekCredentialDto"
		w.CreateDeepSeekCredentialDto = valueCreateDeepSeekCredentialDto
		return nil
	}
	valueCreateGcpCredentialDto := new(CreateGcpCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGcpCredentialDto); err == nil {
		w.typ = "CreateGcpCredentialDto"
		w.CreateGcpCredentialDto = valueCreateGcpCredentialDto
		return nil
	}
	valueCreateGladiaCredentialDto := new(CreateGladiaCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGladiaCredentialDto); err == nil {
		w.typ = "CreateGladiaCredentialDto"
		w.CreateGladiaCredentialDto = valueCreateGladiaCredentialDto
		return nil
	}
	valueCreateGoHighLevelCredentialDto := new(CreateGoHighLevelCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoHighLevelCredentialDto); err == nil {
		w.typ = "CreateGoHighLevelCredentialDto"
		w.CreateGoHighLevelCredentialDto = valueCreateGoHighLevelCredentialDto
		return nil
	}
	valueCreateGoogleCredentialDto := new(CreateGoogleCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCredentialDto); err == nil {
		w.typ = "CreateGoogleCredentialDto"
		w.CreateGoogleCredentialDto = valueCreateGoogleCredentialDto
		return nil
	}
	valueCreateGroqCredentialDto := new(CreateGroqCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGroqCredentialDto); err == nil {
		w.typ = "CreateGroqCredentialDto"
		w.CreateGroqCredentialDto = valueCreateGroqCredentialDto
		return nil
	}
	valueCreateInflectionAiCredentialDto := new(CreateInflectionAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateInflectionAiCredentialDto); err == nil {
		w.typ = "CreateInflectionAiCredentialDto"
		w.CreateInflectionAiCredentialDto = valueCreateInflectionAiCredentialDto
		return nil
	}
	valueCreateLangfuseCredentialDto := new(CreateLangfuseCredentialDto)
	if err := json.Unmarshal(data, &valueCreateLangfuseCredentialDto); err == nil {
		w.typ = "CreateLangfuseCredentialDto"
		w.CreateLangfuseCredentialDto = valueCreateLangfuseCredentialDto
		return nil
	}
	valueCreateLmntCredentialDto := new(CreateLmntCredentialDto)
	if err := json.Unmarshal(data, &valueCreateLmntCredentialDto); err == nil {
		w.typ = "CreateLmntCredentialDto"
		w.CreateLmntCredentialDto = valueCreateLmntCredentialDto
		return nil
	}
	valueCreateMakeCredentialDto := new(CreateMakeCredentialDto)
	if err := json.Unmarshal(data, &valueCreateMakeCredentialDto); err == nil {
		w.typ = "CreateMakeCredentialDto"
		w.CreateMakeCredentialDto = valueCreateMakeCredentialDto
		return nil
	}
	valueCreateOpenAiCredentialDto := new(CreateOpenAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateOpenAiCredentialDto); err == nil {
		w.typ = "CreateOpenAiCredentialDto"
		w.CreateOpenAiCredentialDto = valueCreateOpenAiCredentialDto
		return nil
	}
	valueCreateOpenRouterCredentialDto := new(CreateOpenRouterCredentialDto)
	if err := json.Unmarshal(data, &valueCreateOpenRouterCredentialDto); err == nil {
		w.typ = "CreateOpenRouterCredentialDto"
		w.CreateOpenRouterCredentialDto = valueCreateOpenRouterCredentialDto
		return nil
	}
	valueCreatePerplexityAiCredentialDto := new(CreatePerplexityAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreatePerplexityAiCredentialDto); err == nil {
		w.typ = "CreatePerplexityAiCredentialDto"
		w.CreatePerplexityAiCredentialDto = valueCreatePerplexityAiCredentialDto
		return nil
	}
	valueCreatePlayHtCredentialDto := new(CreatePlayHtCredentialDto)
	if err := json.Unmarshal(data, &valueCreatePlayHtCredentialDto); err == nil {
		w.typ = "CreatePlayHtCredentialDto"
		w.CreatePlayHtCredentialDto = valueCreatePlayHtCredentialDto
		return nil
	}
	valueCreateRimeAiCredentialDto := new(CreateRimeAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateRimeAiCredentialDto); err == nil {
		w.typ = "CreateRimeAiCredentialDto"
		w.CreateRimeAiCredentialDto = valueCreateRimeAiCredentialDto
		return nil
	}
	valueCreateRunpodCredentialDto := new(CreateRunpodCredentialDto)
	if err := json.Unmarshal(data, &valueCreateRunpodCredentialDto); err == nil {
		w.typ = "CreateRunpodCredentialDto"
		w.CreateRunpodCredentialDto = valueCreateRunpodCredentialDto
		return nil
	}
	valueCreateS3CredentialDto := new(CreateS3CredentialDto)
	if err := json.Unmarshal(data, &valueCreateS3CredentialDto); err == nil {
		w.typ = "CreateS3CredentialDto"
		w.CreateS3CredentialDto = valueCreateS3CredentialDto
		return nil
	}
	valueCreateSupabaseCredentialDto := new(CreateSupabaseCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSupabaseCredentialDto); err == nil {
		w.typ = "CreateSupabaseCredentialDto"
		w.CreateSupabaseCredentialDto = valueCreateSupabaseCredentialDto
		return nil
	}
	valueCreateSmallestAiCredentialDto := new(CreateSmallestAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSmallestAiCredentialDto); err == nil {
		w.typ = "CreateSmallestAiCredentialDto"
		w.CreateSmallestAiCredentialDto = valueCreateSmallestAiCredentialDto
		return nil
	}
	valueCreateTavusCredentialDto := new(CreateTavusCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTavusCredentialDto); err == nil {
		w.typ = "CreateTavusCredentialDto"
		w.CreateTavusCredentialDto = valueCreateTavusCredentialDto
		return nil
	}
	valueCreateTogetherAiCredentialDto := new(CreateTogetherAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTogetherAiCredentialDto); err == nil {
		w.typ = "CreateTogetherAiCredentialDto"
		w.CreateTogetherAiCredentialDto = valueCreateTogetherAiCredentialDto
		return nil
	}
	valueCreateTwilioCredentialDto := new(CreateTwilioCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTwilioCredentialDto); err == nil {
		w.typ = "CreateTwilioCredentialDto"
		w.CreateTwilioCredentialDto = valueCreateTwilioCredentialDto
		return nil
	}
	valueCreateVonageCredentialDto := new(CreateVonageCredentialDto)
	if err := json.Unmarshal(data, &valueCreateVonageCredentialDto); err == nil {
		w.typ = "CreateVonageCredentialDto"
		w.CreateVonageCredentialDto = valueCreateVonageCredentialDto
		return nil
	}
	valueCreateWebhookCredentialDto := new(CreateWebhookCredentialDto)
	if err := json.Unmarshal(data, &valueCreateWebhookCredentialDto); err == nil {
		w.typ = "CreateWebhookCredentialDto"
		w.CreateWebhookCredentialDto = valueCreateWebhookCredentialDto
		return nil
	}
	valueCreateXAiCredentialDto := new(CreateXAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateXAiCredentialDto); err == nil {
		w.typ = "CreateXAiCredentialDto"
		w.CreateXAiCredentialDto = valueCreateXAiCredentialDto
		return nil
	}
	valueCreateNeuphonicCredentialDto := new(CreateNeuphonicCredentialDto)
	if err := json.Unmarshal(data, &valueCreateNeuphonicCredentialDto); err == nil {
		w.typ = "CreateNeuphonicCredentialDto"
		w.CreateNeuphonicCredentialDto = valueCreateNeuphonicCredentialDto
		return nil
	}
	valueCreateHumeCredentialDto := new(CreateHumeCredentialDto)
	if err := json.Unmarshal(data, &valueCreateHumeCredentialDto); err == nil {
		w.typ = "CreateHumeCredentialDto"
		w.CreateHumeCredentialDto = valueCreateHumeCredentialDto
		return nil
	}
	valueCreateMistralCredentialDto := new(CreateMistralCredentialDto)
	if err := json.Unmarshal(data, &valueCreateMistralCredentialDto); err == nil {
		w.typ = "CreateMistralCredentialDto"
		w.CreateMistralCredentialDto = valueCreateMistralCredentialDto
		return nil
	}
	valueCreateSpeechmaticsCredentialDto := new(CreateSpeechmaticsCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSpeechmaticsCredentialDto); err == nil {
		w.typ = "CreateSpeechmaticsCredentialDto"
		w.CreateSpeechmaticsCredentialDto = valueCreateSpeechmaticsCredentialDto
		return nil
	}
	valueCreateTrieveCredentialDto := new(CreateTrieveCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTrieveCredentialDto); err == nil {
		w.typ = "CreateTrieveCredentialDto"
		w.CreateTrieveCredentialDto = valueCreateTrieveCredentialDto
		return nil
	}
	valueCreateGoogleCalendarOAuth2ClientCredentialDto := new(CreateGoogleCalendarOAuth2ClientCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCalendarOAuth2ClientCredentialDto); err == nil {
		w.typ = "CreateGoogleCalendarOAuth2ClientCredentialDto"
		w.CreateGoogleCalendarOAuth2ClientCredentialDto = valueCreateGoogleCalendarOAuth2ClientCredentialDto
		return nil
	}
	valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto := new(CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto); err == nil {
		w.typ = "CreateGoogleCalendarOAuth2AuthorizationCredentialDto"
		w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto = valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto := new(CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto); err == nil {
		w.typ = "CreateGoogleSheetsOAuth2AuthorizationCredentialDto"
		w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto = valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateSlackOAuth2AuthorizationCredentialDto := new(CreateSlackOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSlackOAuth2AuthorizationCredentialDto); err == nil {
		w.typ = "CreateSlackOAuth2AuthorizationCredentialDto"
		w.CreateSlackOAuth2AuthorizationCredentialDto = valueCreateSlackOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateGoHighLevelMcpCredentialDto := new(CreateGoHighLevelMcpCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoHighLevelMcpCredentialDto); err == nil {
		w.typ = "CreateGoHighLevelMcpCredentialDto"
		w.CreateGoHighLevelMcpCredentialDto = valueCreateGoHighLevelMcpCredentialDto
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, w)
}

func (w WorkflowCredentialsItem) MarshalJSON() ([]byte, error) {
	if w.typ == "CreateElevenLabsCredentialDto" || w.CreateElevenLabsCredentialDto != nil {
		return json.Marshal(w.CreateElevenLabsCredentialDto)
	}
	if w.typ == "CreateAnthropicCredentialDto" || w.CreateAnthropicCredentialDto != nil {
		return json.Marshal(w.CreateAnthropicCredentialDto)
	}
	if w.typ == "CreateAnyscaleCredentialDto" || w.CreateAnyscaleCredentialDto != nil {
		return json.Marshal(w.CreateAnyscaleCredentialDto)
	}
	if w.typ == "CreateAssemblyAiCredentialDto" || w.CreateAssemblyAiCredentialDto != nil {
		return json.Marshal(w.CreateAssemblyAiCredentialDto)
	}
	if w.typ == "CreateAzureOpenAiCredentialDto" || w.CreateAzureOpenAiCredentialDto != nil {
		return json.Marshal(w.CreateAzureOpenAiCredentialDto)
	}
	if w.typ == "CreateAzureCredentialDto" || w.CreateAzureCredentialDto != nil {
		return json.Marshal(w.CreateAzureCredentialDto)
	}
	if w.typ == "CreateByoSipTrunkCredentialDto" || w.CreateByoSipTrunkCredentialDto != nil {
		return json.Marshal(w.CreateByoSipTrunkCredentialDto)
	}
	if w.typ == "CreateCartesiaCredentialDto" || w.CreateCartesiaCredentialDto != nil {
		return json.Marshal(w.CreateCartesiaCredentialDto)
	}
	if w.typ == "CreateCerebrasCredentialDto" || w.CreateCerebrasCredentialDto != nil {
		return json.Marshal(w.CreateCerebrasCredentialDto)
	}
	if w.typ == "CreateCloudflareCredentialDto" || w.CreateCloudflareCredentialDto != nil {
		return json.Marshal(w.CreateCloudflareCredentialDto)
	}
	if w.typ == "CreateCustomLlmCredentialDto" || w.CreateCustomLlmCredentialDto != nil {
		return json.Marshal(w.CreateCustomLlmCredentialDto)
	}
	if w.typ == "CreateDeepgramCredentialDto" || w.CreateDeepgramCredentialDto != nil {
		return json.Marshal(w.CreateDeepgramCredentialDto)
	}
	if w.typ == "CreateDeepInfraCredentialDto" || w.CreateDeepInfraCredentialDto != nil {
		return json.Marshal(w.CreateDeepInfraCredentialDto)
	}
	if w.typ == "CreateDeepSeekCredentialDto" || w.CreateDeepSeekCredentialDto != nil {
		return json.Marshal(w.CreateDeepSeekCredentialDto)
	}
	if w.typ == "CreateGcpCredentialDto" || w.CreateGcpCredentialDto != nil {
		return json.Marshal(w.CreateGcpCredentialDto)
	}
	if w.typ == "CreateGladiaCredentialDto" || w.CreateGladiaCredentialDto != nil {
		return json.Marshal(w.CreateGladiaCredentialDto)
	}
	if w.typ == "CreateGoHighLevelCredentialDto" || w.CreateGoHighLevelCredentialDto != nil {
		return json.Marshal(w.CreateGoHighLevelCredentialDto)
	}
	if w.typ == "CreateGoogleCredentialDto" || w.CreateGoogleCredentialDto != nil {
		return json.Marshal(w.CreateGoogleCredentialDto)
	}
	if w.typ == "CreateGroqCredentialDto" || w.CreateGroqCredentialDto != nil {
		return json.Marshal(w.CreateGroqCredentialDto)
	}
	if w.typ == "CreateInflectionAiCredentialDto" || w.CreateInflectionAiCredentialDto != nil {
		return json.Marshal(w.CreateInflectionAiCredentialDto)
	}
	if w.typ == "CreateLangfuseCredentialDto" || w.CreateLangfuseCredentialDto != nil {
		return json.Marshal(w.CreateLangfuseCredentialDto)
	}
	if w.typ == "CreateLmntCredentialDto" || w.CreateLmntCredentialDto != nil {
		return json.Marshal(w.CreateLmntCredentialDto)
	}
	if w.typ == "CreateMakeCredentialDto" || w.CreateMakeCredentialDto != nil {
		return json.Marshal(w.CreateMakeCredentialDto)
	}
	if w.typ == "CreateOpenAiCredentialDto" || w.CreateOpenAiCredentialDto != nil {
		return json.Marshal(w.CreateOpenAiCredentialDto)
	}
	if w.typ == "CreateOpenRouterCredentialDto" || w.CreateOpenRouterCredentialDto != nil {
		return json.Marshal(w.CreateOpenRouterCredentialDto)
	}
	if w.typ == "CreatePerplexityAiCredentialDto" || w.CreatePerplexityAiCredentialDto != nil {
		return json.Marshal(w.CreatePerplexityAiCredentialDto)
	}
	if w.typ == "CreatePlayHtCredentialDto" || w.CreatePlayHtCredentialDto != nil {
		return json.Marshal(w.CreatePlayHtCredentialDto)
	}
	if w.typ == "CreateRimeAiCredentialDto" || w.CreateRimeAiCredentialDto != nil {
		return json.Marshal(w.CreateRimeAiCredentialDto)
	}
	if w.typ == "CreateRunpodCredentialDto" || w.CreateRunpodCredentialDto != nil {
		return json.Marshal(w.CreateRunpodCredentialDto)
	}
	if w.typ == "CreateS3CredentialDto" || w.CreateS3CredentialDto != nil {
		return json.Marshal(w.CreateS3CredentialDto)
	}
	if w.typ == "CreateSupabaseCredentialDto" || w.CreateSupabaseCredentialDto != nil {
		return json.Marshal(w.CreateSupabaseCredentialDto)
	}
	if w.typ == "CreateSmallestAiCredentialDto" || w.CreateSmallestAiCredentialDto != nil {
		return json.Marshal(w.CreateSmallestAiCredentialDto)
	}
	if w.typ == "CreateTavusCredentialDto" || w.CreateTavusCredentialDto != nil {
		return json.Marshal(w.CreateTavusCredentialDto)
	}
	if w.typ == "CreateTogetherAiCredentialDto" || w.CreateTogetherAiCredentialDto != nil {
		return json.Marshal(w.CreateTogetherAiCredentialDto)
	}
	if w.typ == "CreateTwilioCredentialDto" || w.CreateTwilioCredentialDto != nil {
		return json.Marshal(w.CreateTwilioCredentialDto)
	}
	if w.typ == "CreateVonageCredentialDto" || w.CreateVonageCredentialDto != nil {
		return json.Marshal(w.CreateVonageCredentialDto)
	}
	if w.typ == "CreateWebhookCredentialDto" || w.CreateWebhookCredentialDto != nil {
		return json.Marshal(w.CreateWebhookCredentialDto)
	}
	if w.typ == "CreateXAiCredentialDto" || w.CreateXAiCredentialDto != nil {
		return json.Marshal(w.CreateXAiCredentialDto)
	}
	if w.typ == "CreateNeuphonicCredentialDto" || w.CreateNeuphonicCredentialDto != nil {
		return json.Marshal(w.CreateNeuphonicCredentialDto)
	}
	if w.typ == "CreateHumeCredentialDto" || w.CreateHumeCredentialDto != nil {
		return json.Marshal(w.CreateHumeCredentialDto)
	}
	if w.typ == "CreateMistralCredentialDto" || w.CreateMistralCredentialDto != nil {
		return json.Marshal(w.CreateMistralCredentialDto)
	}
	if w.typ == "CreateSpeechmaticsCredentialDto" || w.CreateSpeechmaticsCredentialDto != nil {
		return json.Marshal(w.CreateSpeechmaticsCredentialDto)
	}
	if w.typ == "CreateTrieveCredentialDto" || w.CreateTrieveCredentialDto != nil {
		return json.Marshal(w.CreateTrieveCredentialDto)
	}
	if w.typ == "CreateGoogleCalendarOAuth2ClientCredentialDto" || w.CreateGoogleCalendarOAuth2ClientCredentialDto != nil {
		return json.Marshal(w.CreateGoogleCalendarOAuth2ClientCredentialDto)
	}
	if w.typ == "CreateGoogleCalendarOAuth2AuthorizationCredentialDto" || w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateGoogleSheetsOAuth2AuthorizationCredentialDto" || w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateSlackOAuth2AuthorizationCredentialDto" || w.CreateSlackOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(w.CreateSlackOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateGoHighLevelMcpCredentialDto" || w.CreateGoHighLevelMcpCredentialDto != nil {
		return json.Marshal(w.CreateGoHighLevelMcpCredentialDto)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", w)
}

type WorkflowCredentialsItemVisitor interface {
	VisitCreateElevenLabsCredentialDto(*CreateElevenLabsCredentialDto) error
	VisitCreateAnthropicCredentialDto(*CreateAnthropicCredentialDto) error
	VisitCreateAnyscaleCredentialDto(*CreateAnyscaleCredentialDto) error
	VisitCreateAssemblyAiCredentialDto(*CreateAssemblyAiCredentialDto) error
	VisitCreateAzureOpenAiCredentialDto(*CreateAzureOpenAiCredentialDto) error
	VisitCreateAzureCredentialDto(*CreateAzureCredentialDto) error
	VisitCreateByoSipTrunkCredentialDto(*CreateByoSipTrunkCredentialDto) error
	VisitCreateCartesiaCredentialDto(*CreateCartesiaCredentialDto) error
	VisitCreateCerebrasCredentialDto(*CreateCerebrasCredentialDto) error
	VisitCreateCloudflareCredentialDto(*CreateCloudflareCredentialDto) error
	VisitCreateCustomLlmCredentialDto(*CreateCustomLlmCredentialDto) error
	VisitCreateDeepgramCredentialDto(*CreateDeepgramCredentialDto) error
	VisitCreateDeepInfraCredentialDto(*CreateDeepInfraCredentialDto) error
	VisitCreateDeepSeekCredentialDto(*CreateDeepSeekCredentialDto) error
	VisitCreateGcpCredentialDto(*CreateGcpCredentialDto) error
	VisitCreateGladiaCredentialDto(*CreateGladiaCredentialDto) error
	VisitCreateGoHighLevelCredentialDto(*CreateGoHighLevelCredentialDto) error
	VisitCreateGoogleCredentialDto(*CreateGoogleCredentialDto) error
	VisitCreateGroqCredentialDto(*CreateGroqCredentialDto) error
	VisitCreateInflectionAiCredentialDto(*CreateInflectionAiCredentialDto) error
	VisitCreateLangfuseCredentialDto(*CreateLangfuseCredentialDto) error
	VisitCreateLmntCredentialDto(*CreateLmntCredentialDto) error
	VisitCreateMakeCredentialDto(*CreateMakeCredentialDto) error
	VisitCreateOpenAiCredentialDto(*CreateOpenAiCredentialDto) error
	VisitCreateOpenRouterCredentialDto(*CreateOpenRouterCredentialDto) error
	VisitCreatePerplexityAiCredentialDto(*CreatePerplexityAiCredentialDto) error
	VisitCreatePlayHtCredentialDto(*CreatePlayHtCredentialDto) error
	VisitCreateRimeAiCredentialDto(*CreateRimeAiCredentialDto) error
	VisitCreateRunpodCredentialDto(*CreateRunpodCredentialDto) error
	VisitCreateS3CredentialDto(*CreateS3CredentialDto) error
	VisitCreateSupabaseCredentialDto(*CreateSupabaseCredentialDto) error
	VisitCreateSmallestAiCredentialDto(*CreateSmallestAiCredentialDto) error
	VisitCreateTavusCredentialDto(*CreateTavusCredentialDto) error
	VisitCreateTogetherAiCredentialDto(*CreateTogetherAiCredentialDto) error
	VisitCreateTwilioCredentialDto(*CreateTwilioCredentialDto) error
	VisitCreateVonageCredentialDto(*CreateVonageCredentialDto) error
	VisitCreateWebhookCredentialDto(*CreateWebhookCredentialDto) error
	VisitCreateXAiCredentialDto(*CreateXAiCredentialDto) error
	VisitCreateNeuphonicCredentialDto(*CreateNeuphonicCredentialDto) error
	VisitCreateHumeCredentialDto(*CreateHumeCredentialDto) error
	VisitCreateMistralCredentialDto(*CreateMistralCredentialDto) error
	VisitCreateSpeechmaticsCredentialDto(*CreateSpeechmaticsCredentialDto) error
	VisitCreateTrieveCredentialDto(*CreateTrieveCredentialDto) error
	VisitCreateGoogleCalendarOAuth2ClientCredentialDto(*CreateGoogleCalendarOAuth2ClientCredentialDto) error
	VisitCreateGoogleCalendarOAuth2AuthorizationCredentialDto(*CreateGoogleCalendarOAuth2AuthorizationCredentialDto) error
	VisitCreateGoogleSheetsOAuth2AuthorizationCredentialDto(*CreateGoogleSheetsOAuth2AuthorizationCredentialDto) error
	VisitCreateSlackOAuth2AuthorizationCredentialDto(*CreateSlackOAuth2AuthorizationCredentialDto) error
	VisitCreateGoHighLevelMcpCredentialDto(*CreateGoHighLevelMcpCredentialDto) error
}

func (w *WorkflowCredentialsItem) Accept(visitor WorkflowCredentialsItemVisitor) error {
	if w.typ == "CreateElevenLabsCredentialDto" || w.CreateElevenLabsCredentialDto != nil {
		return visitor.VisitCreateElevenLabsCredentialDto(w.CreateElevenLabsCredentialDto)
	}
	if w.typ == "CreateAnthropicCredentialDto" || w.CreateAnthropicCredentialDto != nil {
		return visitor.VisitCreateAnthropicCredentialDto(w.CreateAnthropicCredentialDto)
	}
	if w.typ == "CreateAnyscaleCredentialDto" || w.CreateAnyscaleCredentialDto != nil {
		return visitor.VisitCreateAnyscaleCredentialDto(w.CreateAnyscaleCredentialDto)
	}
	if w.typ == "CreateAssemblyAiCredentialDto" || w.CreateAssemblyAiCredentialDto != nil {
		return visitor.VisitCreateAssemblyAiCredentialDto(w.CreateAssemblyAiCredentialDto)
	}
	if w.typ == "CreateAzureOpenAiCredentialDto" || w.CreateAzureOpenAiCredentialDto != nil {
		return visitor.VisitCreateAzureOpenAiCredentialDto(w.CreateAzureOpenAiCredentialDto)
	}
	if w.typ == "CreateAzureCredentialDto" || w.CreateAzureCredentialDto != nil {
		return visitor.VisitCreateAzureCredentialDto(w.CreateAzureCredentialDto)
	}
	if w.typ == "CreateByoSipTrunkCredentialDto" || w.CreateByoSipTrunkCredentialDto != nil {
		return visitor.VisitCreateByoSipTrunkCredentialDto(w.CreateByoSipTrunkCredentialDto)
	}
	if w.typ == "CreateCartesiaCredentialDto" || w.CreateCartesiaCredentialDto != nil {
		return visitor.VisitCreateCartesiaCredentialDto(w.CreateCartesiaCredentialDto)
	}
	if w.typ == "CreateCerebrasCredentialDto" || w.CreateCerebrasCredentialDto != nil {
		return visitor.VisitCreateCerebrasCredentialDto(w.CreateCerebrasCredentialDto)
	}
	if w.typ == "CreateCloudflareCredentialDto" || w.CreateCloudflareCredentialDto != nil {
		return visitor.VisitCreateCloudflareCredentialDto(w.CreateCloudflareCredentialDto)
	}
	if w.typ == "CreateCustomLlmCredentialDto" || w.CreateCustomLlmCredentialDto != nil {
		return visitor.VisitCreateCustomLlmCredentialDto(w.CreateCustomLlmCredentialDto)
	}
	if w.typ == "CreateDeepgramCredentialDto" || w.CreateDeepgramCredentialDto != nil {
		return visitor.VisitCreateDeepgramCredentialDto(w.CreateDeepgramCredentialDto)
	}
	if w.typ == "CreateDeepInfraCredentialDto" || w.CreateDeepInfraCredentialDto != nil {
		return visitor.VisitCreateDeepInfraCredentialDto(w.CreateDeepInfraCredentialDto)
	}
	if w.typ == "CreateDeepSeekCredentialDto" || w.CreateDeepSeekCredentialDto != nil {
		return visitor.VisitCreateDeepSeekCredentialDto(w.CreateDeepSeekCredentialDto)
	}
	if w.typ == "CreateGcpCredentialDto" || w.CreateGcpCredentialDto != nil {
		return visitor.VisitCreateGcpCredentialDto(w.CreateGcpCredentialDto)
	}
	if w.typ == "CreateGladiaCredentialDto" || w.CreateGladiaCredentialDto != nil {
		return visitor.VisitCreateGladiaCredentialDto(w.CreateGladiaCredentialDto)
	}
	if w.typ == "CreateGoHighLevelCredentialDto" || w.CreateGoHighLevelCredentialDto != nil {
		return visitor.VisitCreateGoHighLevelCredentialDto(w.CreateGoHighLevelCredentialDto)
	}
	if w.typ == "CreateGoogleCredentialDto" || w.CreateGoogleCredentialDto != nil {
		return visitor.VisitCreateGoogleCredentialDto(w.CreateGoogleCredentialDto)
	}
	if w.typ == "CreateGroqCredentialDto" || w.CreateGroqCredentialDto != nil {
		return visitor.VisitCreateGroqCredentialDto(w.CreateGroqCredentialDto)
	}
	if w.typ == "CreateInflectionAiCredentialDto" || w.CreateInflectionAiCredentialDto != nil {
		return visitor.VisitCreateInflectionAiCredentialDto(w.CreateInflectionAiCredentialDto)
	}
	if w.typ == "CreateLangfuseCredentialDto" || w.CreateLangfuseCredentialDto != nil {
		return visitor.VisitCreateLangfuseCredentialDto(w.CreateLangfuseCredentialDto)
	}
	if w.typ == "CreateLmntCredentialDto" || w.CreateLmntCredentialDto != nil {
		return visitor.VisitCreateLmntCredentialDto(w.CreateLmntCredentialDto)
	}
	if w.typ == "CreateMakeCredentialDto" || w.CreateMakeCredentialDto != nil {
		return visitor.VisitCreateMakeCredentialDto(w.CreateMakeCredentialDto)
	}
	if w.typ == "CreateOpenAiCredentialDto" || w.CreateOpenAiCredentialDto != nil {
		return visitor.VisitCreateOpenAiCredentialDto(w.CreateOpenAiCredentialDto)
	}
	if w.typ == "CreateOpenRouterCredentialDto" || w.CreateOpenRouterCredentialDto != nil {
		return visitor.VisitCreateOpenRouterCredentialDto(w.CreateOpenRouterCredentialDto)
	}
	if w.typ == "CreatePerplexityAiCredentialDto" || w.CreatePerplexityAiCredentialDto != nil {
		return visitor.VisitCreatePerplexityAiCredentialDto(w.CreatePerplexityAiCredentialDto)
	}
	if w.typ == "CreatePlayHtCredentialDto" || w.CreatePlayHtCredentialDto != nil {
		return visitor.VisitCreatePlayHtCredentialDto(w.CreatePlayHtCredentialDto)
	}
	if w.typ == "CreateRimeAiCredentialDto" || w.CreateRimeAiCredentialDto != nil {
		return visitor.VisitCreateRimeAiCredentialDto(w.CreateRimeAiCredentialDto)
	}
	if w.typ == "CreateRunpodCredentialDto" || w.CreateRunpodCredentialDto != nil {
		return visitor.VisitCreateRunpodCredentialDto(w.CreateRunpodCredentialDto)
	}
	if w.typ == "CreateS3CredentialDto" || w.CreateS3CredentialDto != nil {
		return visitor.VisitCreateS3CredentialDto(w.CreateS3CredentialDto)
	}
	if w.typ == "CreateSupabaseCredentialDto" || w.CreateSupabaseCredentialDto != nil {
		return visitor.VisitCreateSupabaseCredentialDto(w.CreateSupabaseCredentialDto)
	}
	if w.typ == "CreateSmallestAiCredentialDto" || w.CreateSmallestAiCredentialDto != nil {
		return visitor.VisitCreateSmallestAiCredentialDto(w.CreateSmallestAiCredentialDto)
	}
	if w.typ == "CreateTavusCredentialDto" || w.CreateTavusCredentialDto != nil {
		return visitor.VisitCreateTavusCredentialDto(w.CreateTavusCredentialDto)
	}
	if w.typ == "CreateTogetherAiCredentialDto" || w.CreateTogetherAiCredentialDto != nil {
		return visitor.VisitCreateTogetherAiCredentialDto(w.CreateTogetherAiCredentialDto)
	}
	if w.typ == "CreateTwilioCredentialDto" || w.CreateTwilioCredentialDto != nil {
		return visitor.VisitCreateTwilioCredentialDto(w.CreateTwilioCredentialDto)
	}
	if w.typ == "CreateVonageCredentialDto" || w.CreateVonageCredentialDto != nil {
		return visitor.VisitCreateVonageCredentialDto(w.CreateVonageCredentialDto)
	}
	if w.typ == "CreateWebhookCredentialDto" || w.CreateWebhookCredentialDto != nil {
		return visitor.VisitCreateWebhookCredentialDto(w.CreateWebhookCredentialDto)
	}
	if w.typ == "CreateXAiCredentialDto" || w.CreateXAiCredentialDto != nil {
		return visitor.VisitCreateXAiCredentialDto(w.CreateXAiCredentialDto)
	}
	if w.typ == "CreateNeuphonicCredentialDto" || w.CreateNeuphonicCredentialDto != nil {
		return visitor.VisitCreateNeuphonicCredentialDto(w.CreateNeuphonicCredentialDto)
	}
	if w.typ == "CreateHumeCredentialDto" || w.CreateHumeCredentialDto != nil {
		return visitor.VisitCreateHumeCredentialDto(w.CreateHumeCredentialDto)
	}
	if w.typ == "CreateMistralCredentialDto" || w.CreateMistralCredentialDto != nil {
		return visitor.VisitCreateMistralCredentialDto(w.CreateMistralCredentialDto)
	}
	if w.typ == "CreateSpeechmaticsCredentialDto" || w.CreateSpeechmaticsCredentialDto != nil {
		return visitor.VisitCreateSpeechmaticsCredentialDto(w.CreateSpeechmaticsCredentialDto)
	}
	if w.typ == "CreateTrieveCredentialDto" || w.CreateTrieveCredentialDto != nil {
		return visitor.VisitCreateTrieveCredentialDto(w.CreateTrieveCredentialDto)
	}
	if w.typ == "CreateGoogleCalendarOAuth2ClientCredentialDto" || w.CreateGoogleCalendarOAuth2ClientCredentialDto != nil {
		return visitor.VisitCreateGoogleCalendarOAuth2ClientCredentialDto(w.CreateGoogleCalendarOAuth2ClientCredentialDto)
	}
	if w.typ == "CreateGoogleCalendarOAuth2AuthorizationCredentialDto" || w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateGoogleCalendarOAuth2AuthorizationCredentialDto(w.CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateGoogleSheetsOAuth2AuthorizationCredentialDto" || w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateGoogleSheetsOAuth2AuthorizationCredentialDto(w.CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateSlackOAuth2AuthorizationCredentialDto" || w.CreateSlackOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateSlackOAuth2AuthorizationCredentialDto(w.CreateSlackOAuth2AuthorizationCredentialDto)
	}
	if w.typ == "CreateGoHighLevelMcpCredentialDto" || w.CreateGoHighLevelMcpCredentialDto != nil {
		return visitor.VisitCreateGoHighLevelMcpCredentialDto(w.CreateGoHighLevelMcpCredentialDto)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", w)
}

type WorkflowNodesItem struct {
	ConversationNode *ConversationNode
	ToolNode         *ToolNode

	typ string
}

func (w *WorkflowNodesItem) GetConversationNode() *ConversationNode {
	if w == nil {
		return nil
	}
	return w.ConversationNode
}

func (w *WorkflowNodesItem) GetToolNode() *ToolNode {
	if w == nil {
		return nil
	}
	return w.ToolNode
}

func (w *WorkflowNodesItem) UnmarshalJSON(data []byte) error {
	valueConversationNode := new(ConversationNode)
	if err := json.Unmarshal(data, &valueConversationNode); err == nil {
		w.typ = "ConversationNode"
		w.ConversationNode = valueConversationNode
		return nil
	}
	valueToolNode := new(ToolNode)
	if err := json.Unmarshal(data, &valueToolNode); err == nil {
		w.typ = "ToolNode"
		w.ToolNode = valueToolNode
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, w)
}

func (w WorkflowNodesItem) MarshalJSON() ([]byte, error) {
	if w.typ == "ConversationNode" || w.ConversationNode != nil {
		return json.Marshal(w.ConversationNode)
	}
	if w.typ == "ToolNode" || w.ToolNode != nil {
		return json.Marshal(w.ToolNode)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", w)
}

type WorkflowNodesItemVisitor interface {
	VisitConversationNode(*ConversationNode) error
	VisitToolNode(*ToolNode) error
}

func (w *WorkflowNodesItem) Accept(visitor WorkflowNodesItemVisitor) error {
	if w.typ == "ConversationNode" || w.ConversationNode != nil {
		return visitor.VisitConversationNode(w.ConversationNode)
	}
	if w.typ == "ToolNode" || w.ToolNode != nil {
		return visitor.VisitToolNode(w.ToolNode)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", w)
}

// This is the transcriber for the workflow.
//
// This can be overridden at node level using `nodes[n].transcriber`.
type WorkflowTranscriber struct {
	AssemblyAiTranscriber   *AssemblyAiTranscriber
	AzureSpeechTranscriber  *AzureSpeechTranscriber
	CustomTranscriber       *CustomTranscriber
	DeepgramTranscriber     *DeepgramTranscriber
	ElevenLabsTranscriber   *ElevenLabsTranscriber
	GladiaTranscriber       *GladiaTranscriber
	GoogleTranscriber       *GoogleTranscriber
	SpeechmaticsTranscriber *SpeechmaticsTranscriber
	TalkscriberTranscriber  *TalkscriberTranscriber
	OpenAiTranscriber       *OpenAiTranscriber
	CartesiaTranscriber     *CartesiaTranscriber

	typ string
}

func (w *WorkflowTranscriber) GetAssemblyAiTranscriber() *AssemblyAiTranscriber {
	if w == nil {
		return nil
	}
	return w.AssemblyAiTranscriber
}

func (w *WorkflowTranscriber) GetAzureSpeechTranscriber() *AzureSpeechTranscriber {
	if w == nil {
		return nil
	}
	return w.AzureSpeechTranscriber
}

func (w *WorkflowTranscriber) GetCustomTranscriber() *CustomTranscriber {
	if w == nil {
		return nil
	}
	return w.CustomTranscriber
}

func (w *WorkflowTranscriber) GetDeepgramTranscriber() *DeepgramTranscriber {
	if w == nil {
		return nil
	}
	return w.DeepgramTranscriber
}

func (w *WorkflowTranscriber) GetElevenLabsTranscriber() *ElevenLabsTranscriber {
	if w == nil {
		return nil
	}
	return w.ElevenLabsTranscriber
}

func (w *WorkflowTranscriber) GetGladiaTranscriber() *GladiaTranscriber {
	if w == nil {
		return nil
	}
	return w.GladiaTranscriber
}

func (w *WorkflowTranscriber) GetGoogleTranscriber() *GoogleTranscriber {
	if w == nil {
		return nil
	}
	return w.GoogleTranscriber
}

func (w *WorkflowTranscriber) GetSpeechmaticsTranscriber() *SpeechmaticsTranscriber {
	if w == nil {
		return nil
	}
	return w.SpeechmaticsTranscriber
}

func (w *WorkflowTranscriber) GetTalkscriberTranscriber() *TalkscriberTranscriber {
	if w == nil {
		return nil
	}
	return w.TalkscriberTranscriber
}

func (w *WorkflowTranscriber) GetOpenAiTranscriber() *OpenAiTranscriber {
	if w == nil {
		return nil
	}
	return w.OpenAiTranscriber
}

func (w *WorkflowTranscriber) GetCartesiaTranscriber() *CartesiaTranscriber {
	if w == nil {
		return nil
	}
	return w.CartesiaTranscriber
}

func (w *WorkflowTranscriber) UnmarshalJSON(data []byte) error {
	valueAssemblyAiTranscriber := new(AssemblyAiTranscriber)
	if err := json.Unmarshal(data, &valueAssemblyAiTranscriber); err == nil {
		w.typ = "AssemblyAiTranscriber"
		w.AssemblyAiTranscriber = valueAssemblyAiTranscriber
		return nil
	}
	valueAzureSpeechTranscriber := new(AzureSpeechTranscriber)
	if err := json.Unmarshal(data, &valueAzureSpeechTranscriber); err == nil {
		w.typ = "AzureSpeechTranscriber"
		w.AzureSpeechTranscriber = valueAzureSpeechTranscriber
		return nil
	}
	valueCustomTranscriber := new(CustomTranscriber)
	if err := json.Unmarshal(data, &valueCustomTranscriber); err == nil {
		w.typ = "CustomTranscriber"
		w.CustomTranscriber = valueCustomTranscriber
		return nil
	}
	valueDeepgramTranscriber := new(DeepgramTranscriber)
	if err := json.Unmarshal(data, &valueDeepgramTranscriber); err == nil {
		w.typ = "DeepgramTranscriber"
		w.DeepgramTranscriber = valueDeepgramTranscriber
		return nil
	}
	valueElevenLabsTranscriber := new(ElevenLabsTranscriber)
	if err := json.Unmarshal(data, &valueElevenLabsTranscriber); err == nil {
		w.typ = "ElevenLabsTranscriber"
		w.ElevenLabsTranscriber = valueElevenLabsTranscriber
		return nil
	}
	valueGladiaTranscriber := new(GladiaTranscriber)
	if err := json.Unmarshal(data, &valueGladiaTranscriber); err == nil {
		w.typ = "GladiaTranscriber"
		w.GladiaTranscriber = valueGladiaTranscriber
		return nil
	}
	valueGoogleTranscriber := new(GoogleTranscriber)
	if err := json.Unmarshal(data, &valueGoogleTranscriber); err == nil {
		w.typ = "GoogleTranscriber"
		w.GoogleTranscriber = valueGoogleTranscriber
		return nil
	}
	valueSpeechmaticsTranscriber := new(SpeechmaticsTranscriber)
	if err := json.Unmarshal(data, &valueSpeechmaticsTranscriber); err == nil {
		w.typ = "SpeechmaticsTranscriber"
		w.SpeechmaticsTranscriber = valueSpeechmaticsTranscriber
		return nil
	}
	valueTalkscriberTranscriber := new(TalkscriberTranscriber)
	if err := json.Unmarshal(data, &valueTalkscriberTranscriber); err == nil {
		w.typ = "TalkscriberTranscriber"
		w.TalkscriberTranscriber = valueTalkscriberTranscriber
		return nil
	}
	valueOpenAiTranscriber := new(OpenAiTranscriber)
	if err := json.Unmarshal(data, &valueOpenAiTranscriber); err == nil {
		w.typ = "OpenAiTranscriber"
		w.OpenAiTranscriber = valueOpenAiTranscriber
		return nil
	}
	valueCartesiaTranscriber := new(CartesiaTranscriber)
	if err := json.Unmarshal(data, &valueCartesiaTranscriber); err == nil {
		w.typ = "CartesiaTranscriber"
		w.CartesiaTranscriber = valueCartesiaTranscriber
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, w)
}

func (w WorkflowTranscriber) MarshalJSON() ([]byte, error) {
	if w.typ == "AssemblyAiTranscriber" || w.AssemblyAiTranscriber != nil {
		return json.Marshal(w.AssemblyAiTranscriber)
	}
	if w.typ == "AzureSpeechTranscriber" || w.AzureSpeechTranscriber != nil {
		return json.Marshal(w.AzureSpeechTranscriber)
	}
	if w.typ == "CustomTranscriber" || w.CustomTranscriber != nil {
		return json.Marshal(w.CustomTranscriber)
	}
	if w.typ == "DeepgramTranscriber" || w.DeepgramTranscriber != nil {
		return json.Marshal(w.DeepgramTranscriber)
	}
	if w.typ == "ElevenLabsTranscriber" || w.ElevenLabsTranscriber != nil {
		return json.Marshal(w.ElevenLabsTranscriber)
	}
	if w.typ == "GladiaTranscriber" || w.GladiaTranscriber != nil {
		return json.Marshal(w.GladiaTranscriber)
	}
	if w.typ == "GoogleTranscriber" || w.GoogleTranscriber != nil {
		return json.Marshal(w.GoogleTranscriber)
	}
	if w.typ == "SpeechmaticsTranscriber" || w.SpeechmaticsTranscriber != nil {
		return json.Marshal(w.SpeechmaticsTranscriber)
	}
	if w.typ == "TalkscriberTranscriber" || w.TalkscriberTranscriber != nil {
		return json.Marshal(w.TalkscriberTranscriber)
	}
	if w.typ == "OpenAiTranscriber" || w.OpenAiTranscriber != nil {
		return json.Marshal(w.OpenAiTranscriber)
	}
	if w.typ == "CartesiaTranscriber" || w.CartesiaTranscriber != nil {
		return json.Marshal(w.CartesiaTranscriber)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", w)
}

type WorkflowTranscriberVisitor interface {
	VisitAssemblyAiTranscriber(*AssemblyAiTranscriber) error
	VisitAzureSpeechTranscriber(*AzureSpeechTranscriber) error
	VisitCustomTranscriber(*CustomTranscriber) error
	VisitDeepgramTranscriber(*DeepgramTranscriber) error
	VisitElevenLabsTranscriber(*ElevenLabsTranscriber) error
	VisitGladiaTranscriber(*GladiaTranscriber) error
	VisitGoogleTranscriber(*GoogleTranscriber) error
	VisitSpeechmaticsTranscriber(*SpeechmaticsTranscriber) error
	VisitTalkscriberTranscriber(*TalkscriberTranscriber) error
	VisitOpenAiTranscriber(*OpenAiTranscriber) error
	VisitCartesiaTranscriber(*CartesiaTranscriber) error
}

func (w *WorkflowTranscriber) Accept(visitor WorkflowTranscriberVisitor) error {
	if w.typ == "AssemblyAiTranscriber" || w.AssemblyAiTranscriber != nil {
		return visitor.VisitAssemblyAiTranscriber(w.AssemblyAiTranscriber)
	}
	if w.typ == "AzureSpeechTranscriber" || w.AzureSpeechTranscriber != nil {
		return visitor.VisitAzureSpeechTranscriber(w.AzureSpeechTranscriber)
	}
	if w.typ == "CustomTranscriber" || w.CustomTranscriber != nil {
		return visitor.VisitCustomTranscriber(w.CustomTranscriber)
	}
	if w.typ == "DeepgramTranscriber" || w.DeepgramTranscriber != nil {
		return visitor.VisitDeepgramTranscriber(w.DeepgramTranscriber)
	}
	if w.typ == "ElevenLabsTranscriber" || w.ElevenLabsTranscriber != nil {
		return visitor.VisitElevenLabsTranscriber(w.ElevenLabsTranscriber)
	}
	if w.typ == "GladiaTranscriber" || w.GladiaTranscriber != nil {
		return visitor.VisitGladiaTranscriber(w.GladiaTranscriber)
	}
	if w.typ == "GoogleTranscriber" || w.GoogleTranscriber != nil {
		return visitor.VisitGoogleTranscriber(w.GoogleTranscriber)
	}
	if w.typ == "SpeechmaticsTranscriber" || w.SpeechmaticsTranscriber != nil {
		return visitor.VisitSpeechmaticsTranscriber(w.SpeechmaticsTranscriber)
	}
	if w.typ == "TalkscriberTranscriber" || w.TalkscriberTranscriber != nil {
		return visitor.VisitTalkscriberTranscriber(w.TalkscriberTranscriber)
	}
	if w.typ == "OpenAiTranscriber" || w.OpenAiTranscriber != nil {
		return visitor.VisitOpenAiTranscriber(w.OpenAiTranscriber)
	}
	if w.typ == "CartesiaTranscriber" || w.CartesiaTranscriber != nil {
		return visitor.VisitCartesiaTranscriber(w.CartesiaTranscriber)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", w)
}

// This is the voice for the workflow.
//
// This can be overridden at node level using `nodes[n].voice`.
type WorkflowVoice struct {
	AzureVoice      *AzureVoice
	CartesiaVoice   *CartesiaVoice
	CustomVoice     *CustomVoice
	DeepgramVoice   *DeepgramVoice
	ElevenLabsVoice *ElevenLabsVoice
	HumeVoice       *HumeVoice
	LmntVoice       *LmntVoice
	NeuphonicVoice  *NeuphonicVoice
	OpenAiVoice     *OpenAiVoice
	PlayHtVoice     *PlayHtVoice
	RimeAiVoice     *RimeAiVoice
	SmallestAiVoice *SmallestAiVoice
	TavusVoice      *TavusVoice
	VapiVoice       *VapiVoice
	SesameVoice     *SesameVoice

	typ string
}

func (w *WorkflowVoice) GetAzureVoice() *AzureVoice {
	if w == nil {
		return nil
	}
	return w.AzureVoice
}

func (w *WorkflowVoice) GetCartesiaVoice() *CartesiaVoice {
	if w == nil {
		return nil
	}
	return w.CartesiaVoice
}

func (w *WorkflowVoice) GetCustomVoice() *CustomVoice {
	if w == nil {
		return nil
	}
	return w.CustomVoice
}

func (w *WorkflowVoice) GetDeepgramVoice() *DeepgramVoice {
	if w == nil {
		return nil
	}
	return w.DeepgramVoice
}

func (w *WorkflowVoice) GetElevenLabsVoice() *ElevenLabsVoice {
	if w == nil {
		return nil
	}
	return w.ElevenLabsVoice
}

func (w *WorkflowVoice) GetHumeVoice() *HumeVoice {
	if w == nil {
		return nil
	}
	return w.HumeVoice
}

func (w *WorkflowVoice) GetLmntVoice() *LmntVoice {
	if w == nil {
		return nil
	}
	return w.LmntVoice
}

func (w *WorkflowVoice) GetNeuphonicVoice() *NeuphonicVoice {
	if w == nil {
		return nil
	}
	return w.NeuphonicVoice
}

func (w *WorkflowVoice) GetOpenAiVoice() *OpenAiVoice {
	if w == nil {
		return nil
	}
	return w.OpenAiVoice
}

func (w *WorkflowVoice) GetPlayHtVoice() *PlayHtVoice {
	if w == nil {
		return nil
	}
	return w.PlayHtVoice
}

func (w *WorkflowVoice) GetRimeAiVoice() *RimeAiVoice {
	if w == nil {
		return nil
	}
	return w.RimeAiVoice
}

func (w *WorkflowVoice) GetSmallestAiVoice() *SmallestAiVoice {
	if w == nil {
		return nil
	}
	return w.SmallestAiVoice
}

func (w *WorkflowVoice) GetTavusVoice() *TavusVoice {
	if w == nil {
		return nil
	}
	return w.TavusVoice
}

func (w *WorkflowVoice) GetVapiVoice() *VapiVoice {
	if w == nil {
		return nil
	}
	return w.VapiVoice
}

func (w *WorkflowVoice) GetSesameVoice() *SesameVoice {
	if w == nil {
		return nil
	}
	return w.SesameVoice
}

func (w *WorkflowVoice) UnmarshalJSON(data []byte) error {
	valueAzureVoice := new(AzureVoice)
	if err := json.Unmarshal(data, &valueAzureVoice); err == nil {
		w.typ = "AzureVoice"
		w.AzureVoice = valueAzureVoice
		return nil
	}
	valueCartesiaVoice := new(CartesiaVoice)
	if err := json.Unmarshal(data, &valueCartesiaVoice); err == nil {
		w.typ = "CartesiaVoice"
		w.CartesiaVoice = valueCartesiaVoice
		return nil
	}
	valueCustomVoice := new(CustomVoice)
	if err := json.Unmarshal(data, &valueCustomVoice); err == nil {
		w.typ = "CustomVoice"
		w.CustomVoice = valueCustomVoice
		return nil
	}
	valueDeepgramVoice := new(DeepgramVoice)
	if err := json.Unmarshal(data, &valueDeepgramVoice); err == nil {
		w.typ = "DeepgramVoice"
		w.DeepgramVoice = valueDeepgramVoice
		return nil
	}
	valueElevenLabsVoice := new(ElevenLabsVoice)
	if err := json.Unmarshal(data, &valueElevenLabsVoice); err == nil {
		w.typ = "ElevenLabsVoice"
		w.ElevenLabsVoice = valueElevenLabsVoice
		return nil
	}
	valueHumeVoice := new(HumeVoice)
	if err := json.Unmarshal(data, &valueHumeVoice); err == nil {
		w.typ = "HumeVoice"
		w.HumeVoice = valueHumeVoice
		return nil
	}
	valueLmntVoice := new(LmntVoice)
	if err := json.Unmarshal(data, &valueLmntVoice); err == nil {
		w.typ = "LmntVoice"
		w.LmntVoice = valueLmntVoice
		return nil
	}
	valueNeuphonicVoice := new(NeuphonicVoice)
	if err := json.Unmarshal(data, &valueNeuphonicVoice); err == nil {
		w.typ = "NeuphonicVoice"
		w.NeuphonicVoice = valueNeuphonicVoice
		return nil
	}
	valueOpenAiVoice := new(OpenAiVoice)
	if err := json.Unmarshal(data, &valueOpenAiVoice); err == nil {
		w.typ = "OpenAiVoice"
		w.OpenAiVoice = valueOpenAiVoice
		return nil
	}
	valuePlayHtVoice := new(PlayHtVoice)
	if err := json.Unmarshal(data, &valuePlayHtVoice); err == nil {
		w.typ = "PlayHtVoice"
		w.PlayHtVoice = valuePlayHtVoice
		return nil
	}
	valueRimeAiVoice := new(RimeAiVoice)
	if err := json.Unmarshal(data, &valueRimeAiVoice); err == nil {
		w.typ = "RimeAiVoice"
		w.RimeAiVoice = valueRimeAiVoice
		return nil
	}
	valueSmallestAiVoice := new(SmallestAiVoice)
	if err := json.Unmarshal(data, &valueSmallestAiVoice); err == nil {
		w.typ = "SmallestAiVoice"
		w.SmallestAiVoice = valueSmallestAiVoice
		return nil
	}
	valueTavusVoice := new(TavusVoice)
	if err := json.Unmarshal(data, &valueTavusVoice); err == nil {
		w.typ = "TavusVoice"
		w.TavusVoice = valueTavusVoice
		return nil
	}
	valueVapiVoice := new(VapiVoice)
	if err := json.Unmarshal(data, &valueVapiVoice); err == nil {
		w.typ = "VapiVoice"
		w.VapiVoice = valueVapiVoice
		return nil
	}
	valueSesameVoice := new(SesameVoice)
	if err := json.Unmarshal(data, &valueSesameVoice); err == nil {
		w.typ = "SesameVoice"
		w.SesameVoice = valueSesameVoice
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, w)
}

func (w WorkflowVoice) MarshalJSON() ([]byte, error) {
	if w.typ == "AzureVoice" || w.AzureVoice != nil {
		return json.Marshal(w.AzureVoice)
	}
	if w.typ == "CartesiaVoice" || w.CartesiaVoice != nil {
		return json.Marshal(w.CartesiaVoice)
	}
	if w.typ == "CustomVoice" || w.CustomVoice != nil {
		return json.Marshal(w.CustomVoice)
	}
	if w.typ == "DeepgramVoice" || w.DeepgramVoice != nil {
		return json.Marshal(w.DeepgramVoice)
	}
	if w.typ == "ElevenLabsVoice" || w.ElevenLabsVoice != nil {
		return json.Marshal(w.ElevenLabsVoice)
	}
	if w.typ == "HumeVoice" || w.HumeVoice != nil {
		return json.Marshal(w.HumeVoice)
	}
	if w.typ == "LmntVoice" || w.LmntVoice != nil {
		return json.Marshal(w.LmntVoice)
	}
	if w.typ == "NeuphonicVoice" || w.NeuphonicVoice != nil {
		return json.Marshal(w.NeuphonicVoice)
	}
	if w.typ == "OpenAiVoice" || w.OpenAiVoice != nil {
		return json.Marshal(w.OpenAiVoice)
	}
	if w.typ == "PlayHtVoice" || w.PlayHtVoice != nil {
		return json.Marshal(w.PlayHtVoice)
	}
	if w.typ == "RimeAiVoice" || w.RimeAiVoice != nil {
		return json.Marshal(w.RimeAiVoice)
	}
	if w.typ == "SmallestAiVoice" || w.SmallestAiVoice != nil {
		return json.Marshal(w.SmallestAiVoice)
	}
	if w.typ == "TavusVoice" || w.TavusVoice != nil {
		return json.Marshal(w.TavusVoice)
	}
	if w.typ == "VapiVoice" || w.VapiVoice != nil {
		return json.Marshal(w.VapiVoice)
	}
	if w.typ == "SesameVoice" || w.SesameVoice != nil {
		return json.Marshal(w.SesameVoice)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", w)
}

type WorkflowVoiceVisitor interface {
	VisitAzureVoice(*AzureVoice) error
	VisitCartesiaVoice(*CartesiaVoice) error
	VisitCustomVoice(*CustomVoice) error
	VisitDeepgramVoice(*DeepgramVoice) error
	VisitElevenLabsVoice(*ElevenLabsVoice) error
	VisitHumeVoice(*HumeVoice) error
	VisitLmntVoice(*LmntVoice) error
	VisitNeuphonicVoice(*NeuphonicVoice) error
	VisitOpenAiVoice(*OpenAiVoice) error
	VisitPlayHtVoice(*PlayHtVoice) error
	VisitRimeAiVoice(*RimeAiVoice) error
	VisitSmallestAiVoice(*SmallestAiVoice) error
	VisitTavusVoice(*TavusVoice) error
	VisitVapiVoice(*VapiVoice) error
	VisitSesameVoice(*SesameVoice) error
}

func (w *WorkflowVoice) Accept(visitor WorkflowVoiceVisitor) error {
	if w.typ == "AzureVoice" || w.AzureVoice != nil {
		return visitor.VisitAzureVoice(w.AzureVoice)
	}
	if w.typ == "CartesiaVoice" || w.CartesiaVoice != nil {
		return visitor.VisitCartesiaVoice(w.CartesiaVoice)
	}
	if w.typ == "CustomVoice" || w.CustomVoice != nil {
		return visitor.VisitCustomVoice(w.CustomVoice)
	}
	if w.typ == "DeepgramVoice" || w.DeepgramVoice != nil {
		return visitor.VisitDeepgramVoice(w.DeepgramVoice)
	}
	if w.typ == "ElevenLabsVoice" || w.ElevenLabsVoice != nil {
		return visitor.VisitElevenLabsVoice(w.ElevenLabsVoice)
	}
	if w.typ == "HumeVoice" || w.HumeVoice != nil {
		return visitor.VisitHumeVoice(w.HumeVoice)
	}
	if w.typ == "LmntVoice" || w.LmntVoice != nil {
		return visitor.VisitLmntVoice(w.LmntVoice)
	}
	if w.typ == "NeuphonicVoice" || w.NeuphonicVoice != nil {
		return visitor.VisitNeuphonicVoice(w.NeuphonicVoice)
	}
	if w.typ == "OpenAiVoice" || w.OpenAiVoice != nil {
		return visitor.VisitOpenAiVoice(w.OpenAiVoice)
	}
	if w.typ == "PlayHtVoice" || w.PlayHtVoice != nil {
		return visitor.VisitPlayHtVoice(w.PlayHtVoice)
	}
	if w.typ == "RimeAiVoice" || w.RimeAiVoice != nil {
		return visitor.VisitRimeAiVoice(w.RimeAiVoice)
	}
	if w.typ == "SmallestAiVoice" || w.SmallestAiVoice != nil {
		return visitor.VisitSmallestAiVoice(w.SmallestAiVoice)
	}
	if w.typ == "TavusVoice" || w.TavusVoice != nil {
		return visitor.VisitTavusVoice(w.TavusVoice)
	}
	if w.typ == "VapiVoice" || w.VapiVoice != nil {
		return visitor.VisitVapiVoice(w.VapiVoice)
	}
	if w.typ == "SesameVoice" || w.SesameVoice != nil {
		return visitor.VisitSesameVoice(w.SesameVoice)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", w)
}

type UpdateWorkflowDtoCredentialsItem struct {
	CreateElevenLabsCredentialDto                        *CreateElevenLabsCredentialDto
	CreateAnthropicCredentialDto                         *CreateAnthropicCredentialDto
	CreateAnyscaleCredentialDto                          *CreateAnyscaleCredentialDto
	CreateAssemblyAiCredentialDto                        *CreateAssemblyAiCredentialDto
	CreateAzureOpenAiCredentialDto                       *CreateAzureOpenAiCredentialDto
	CreateAzureCredentialDto                             *CreateAzureCredentialDto
	CreateByoSipTrunkCredentialDto                       *CreateByoSipTrunkCredentialDto
	CreateCartesiaCredentialDto                          *CreateCartesiaCredentialDto
	CreateCerebrasCredentialDto                          *CreateCerebrasCredentialDto
	CreateCloudflareCredentialDto                        *CreateCloudflareCredentialDto
	CreateCustomLlmCredentialDto                         *CreateCustomLlmCredentialDto
	CreateDeepgramCredentialDto                          *CreateDeepgramCredentialDto
	CreateDeepInfraCredentialDto                         *CreateDeepInfraCredentialDto
	CreateDeepSeekCredentialDto                          *CreateDeepSeekCredentialDto
	CreateGcpCredentialDto                               *CreateGcpCredentialDto
	CreateGladiaCredentialDto                            *CreateGladiaCredentialDto
	CreateGoHighLevelCredentialDto                       *CreateGoHighLevelCredentialDto
	CreateGoogleCredentialDto                            *CreateGoogleCredentialDto
	CreateGroqCredentialDto                              *CreateGroqCredentialDto
	CreateInflectionAiCredentialDto                      *CreateInflectionAiCredentialDto
	CreateLangfuseCredentialDto                          *CreateLangfuseCredentialDto
	CreateLmntCredentialDto                              *CreateLmntCredentialDto
	CreateMakeCredentialDto                              *CreateMakeCredentialDto
	CreateOpenAiCredentialDto                            *CreateOpenAiCredentialDto
	CreateOpenRouterCredentialDto                        *CreateOpenRouterCredentialDto
	CreatePerplexityAiCredentialDto                      *CreatePerplexityAiCredentialDto
	CreatePlayHtCredentialDto                            *CreatePlayHtCredentialDto
	CreateRimeAiCredentialDto                            *CreateRimeAiCredentialDto
	CreateRunpodCredentialDto                            *CreateRunpodCredentialDto
	CreateS3CredentialDto                                *CreateS3CredentialDto
	CreateSupabaseCredentialDto                          *CreateSupabaseCredentialDto
	CreateSmallestAiCredentialDto                        *CreateSmallestAiCredentialDto
	CreateTavusCredentialDto                             *CreateTavusCredentialDto
	CreateTogetherAiCredentialDto                        *CreateTogetherAiCredentialDto
	CreateTwilioCredentialDto                            *CreateTwilioCredentialDto
	CreateVonageCredentialDto                            *CreateVonageCredentialDto
	CreateWebhookCredentialDto                           *CreateWebhookCredentialDto
	CreateXAiCredentialDto                               *CreateXAiCredentialDto
	CreateNeuphonicCredentialDto                         *CreateNeuphonicCredentialDto
	CreateHumeCredentialDto                              *CreateHumeCredentialDto
	CreateMistralCredentialDto                           *CreateMistralCredentialDto
	CreateSpeechmaticsCredentialDto                      *CreateSpeechmaticsCredentialDto
	CreateTrieveCredentialDto                            *CreateTrieveCredentialDto
	CreateGoogleCalendarOAuth2ClientCredentialDto        *CreateGoogleCalendarOAuth2ClientCredentialDto
	CreateGoogleCalendarOAuth2AuthorizationCredentialDto *CreateGoogleCalendarOAuth2AuthorizationCredentialDto
	CreateGoogleSheetsOAuth2AuthorizationCredentialDto   *CreateGoogleSheetsOAuth2AuthorizationCredentialDto
	CreateSlackOAuth2AuthorizationCredentialDto          *CreateSlackOAuth2AuthorizationCredentialDto
	CreateGoHighLevelMcpCredentialDto                    *CreateGoHighLevelMcpCredentialDto

	typ string
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateElevenLabsCredentialDto() *CreateElevenLabsCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateElevenLabsCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateAnthropicCredentialDto() *CreateAnthropicCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateAnthropicCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateAnyscaleCredentialDto() *CreateAnyscaleCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateAnyscaleCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateAssemblyAiCredentialDto() *CreateAssemblyAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateAssemblyAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateAzureOpenAiCredentialDto() *CreateAzureOpenAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateAzureOpenAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateAzureCredentialDto() *CreateAzureCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateAzureCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateByoSipTrunkCredentialDto() *CreateByoSipTrunkCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateByoSipTrunkCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateCartesiaCredentialDto() *CreateCartesiaCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateCartesiaCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateCerebrasCredentialDto() *CreateCerebrasCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateCerebrasCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateCloudflareCredentialDto() *CreateCloudflareCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateCloudflareCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateCustomLlmCredentialDto() *CreateCustomLlmCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateCustomLlmCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateDeepgramCredentialDto() *CreateDeepgramCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateDeepgramCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateDeepInfraCredentialDto() *CreateDeepInfraCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateDeepInfraCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateDeepSeekCredentialDto() *CreateDeepSeekCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateDeepSeekCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGcpCredentialDto() *CreateGcpCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGcpCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGladiaCredentialDto() *CreateGladiaCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGladiaCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoHighLevelCredentialDto() *CreateGoHighLevelCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoHighLevelCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoogleCredentialDto() *CreateGoogleCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoogleCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGroqCredentialDto() *CreateGroqCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGroqCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateInflectionAiCredentialDto() *CreateInflectionAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateInflectionAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateLangfuseCredentialDto() *CreateLangfuseCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateLangfuseCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateLmntCredentialDto() *CreateLmntCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateLmntCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateMakeCredentialDto() *CreateMakeCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateMakeCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateOpenAiCredentialDto() *CreateOpenAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateOpenAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateOpenRouterCredentialDto() *CreateOpenRouterCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateOpenRouterCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreatePerplexityAiCredentialDto() *CreatePerplexityAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreatePerplexityAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreatePlayHtCredentialDto() *CreatePlayHtCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreatePlayHtCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateRimeAiCredentialDto() *CreateRimeAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateRimeAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateRunpodCredentialDto() *CreateRunpodCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateRunpodCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateS3CredentialDto() *CreateS3CredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateS3CredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateSupabaseCredentialDto() *CreateSupabaseCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateSupabaseCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateSmallestAiCredentialDto() *CreateSmallestAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateSmallestAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateTavusCredentialDto() *CreateTavusCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateTavusCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateTogetherAiCredentialDto() *CreateTogetherAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateTogetherAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateTwilioCredentialDto() *CreateTwilioCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateTwilioCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateVonageCredentialDto() *CreateVonageCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateVonageCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateWebhookCredentialDto() *CreateWebhookCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateWebhookCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateXAiCredentialDto() *CreateXAiCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateXAiCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateNeuphonicCredentialDto() *CreateNeuphonicCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateNeuphonicCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateHumeCredentialDto() *CreateHumeCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateHumeCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateMistralCredentialDto() *CreateMistralCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateMistralCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateSpeechmaticsCredentialDto() *CreateSpeechmaticsCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateSpeechmaticsCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateTrieveCredentialDto() *CreateTrieveCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateTrieveCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoogleCalendarOAuth2ClientCredentialDto() *CreateGoogleCalendarOAuth2ClientCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoogleCalendarOAuth2ClientCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoogleCalendarOAuth2AuthorizationCredentialDto() *CreateGoogleCalendarOAuth2AuthorizationCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoogleSheetsOAuth2AuthorizationCredentialDto() *CreateGoogleSheetsOAuth2AuthorizationCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateSlackOAuth2AuthorizationCredentialDto() *CreateSlackOAuth2AuthorizationCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateSlackOAuth2AuthorizationCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) GetCreateGoHighLevelMcpCredentialDto() *CreateGoHighLevelMcpCredentialDto {
	if u == nil {
		return nil
	}
	return u.CreateGoHighLevelMcpCredentialDto
}

func (u *UpdateWorkflowDtoCredentialsItem) UnmarshalJSON(data []byte) error {
	valueCreateElevenLabsCredentialDto := new(CreateElevenLabsCredentialDto)
	if err := json.Unmarshal(data, &valueCreateElevenLabsCredentialDto); err == nil {
		u.typ = "CreateElevenLabsCredentialDto"
		u.CreateElevenLabsCredentialDto = valueCreateElevenLabsCredentialDto
		return nil
	}
	valueCreateAnthropicCredentialDto := new(CreateAnthropicCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAnthropicCredentialDto); err == nil {
		u.typ = "CreateAnthropicCredentialDto"
		u.CreateAnthropicCredentialDto = valueCreateAnthropicCredentialDto
		return nil
	}
	valueCreateAnyscaleCredentialDto := new(CreateAnyscaleCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAnyscaleCredentialDto); err == nil {
		u.typ = "CreateAnyscaleCredentialDto"
		u.CreateAnyscaleCredentialDto = valueCreateAnyscaleCredentialDto
		return nil
	}
	valueCreateAssemblyAiCredentialDto := new(CreateAssemblyAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAssemblyAiCredentialDto); err == nil {
		u.typ = "CreateAssemblyAiCredentialDto"
		u.CreateAssemblyAiCredentialDto = valueCreateAssemblyAiCredentialDto
		return nil
	}
	valueCreateAzureOpenAiCredentialDto := new(CreateAzureOpenAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAzureOpenAiCredentialDto); err == nil {
		u.typ = "CreateAzureOpenAiCredentialDto"
		u.CreateAzureOpenAiCredentialDto = valueCreateAzureOpenAiCredentialDto
		return nil
	}
	valueCreateAzureCredentialDto := new(CreateAzureCredentialDto)
	if err := json.Unmarshal(data, &valueCreateAzureCredentialDto); err == nil {
		u.typ = "CreateAzureCredentialDto"
		u.CreateAzureCredentialDto = valueCreateAzureCredentialDto
		return nil
	}
	valueCreateByoSipTrunkCredentialDto := new(CreateByoSipTrunkCredentialDto)
	if err := json.Unmarshal(data, &valueCreateByoSipTrunkCredentialDto); err == nil {
		u.typ = "CreateByoSipTrunkCredentialDto"
		u.CreateByoSipTrunkCredentialDto = valueCreateByoSipTrunkCredentialDto
		return nil
	}
	valueCreateCartesiaCredentialDto := new(CreateCartesiaCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCartesiaCredentialDto); err == nil {
		u.typ = "CreateCartesiaCredentialDto"
		u.CreateCartesiaCredentialDto = valueCreateCartesiaCredentialDto
		return nil
	}
	valueCreateCerebrasCredentialDto := new(CreateCerebrasCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCerebrasCredentialDto); err == nil {
		u.typ = "CreateCerebrasCredentialDto"
		u.CreateCerebrasCredentialDto = valueCreateCerebrasCredentialDto
		return nil
	}
	valueCreateCloudflareCredentialDto := new(CreateCloudflareCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCloudflareCredentialDto); err == nil {
		u.typ = "CreateCloudflareCredentialDto"
		u.CreateCloudflareCredentialDto = valueCreateCloudflareCredentialDto
		return nil
	}
	valueCreateCustomLlmCredentialDto := new(CreateCustomLlmCredentialDto)
	if err := json.Unmarshal(data, &valueCreateCustomLlmCredentialDto); err == nil {
		u.typ = "CreateCustomLlmCredentialDto"
		u.CreateCustomLlmCredentialDto = valueCreateCustomLlmCredentialDto
		return nil
	}
	valueCreateDeepgramCredentialDto := new(CreateDeepgramCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepgramCredentialDto); err == nil {
		u.typ = "CreateDeepgramCredentialDto"
		u.CreateDeepgramCredentialDto = valueCreateDeepgramCredentialDto
		return nil
	}
	valueCreateDeepInfraCredentialDto := new(CreateDeepInfraCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepInfraCredentialDto); err == nil {
		u.typ = "CreateDeepInfraCredentialDto"
		u.CreateDeepInfraCredentialDto = valueCreateDeepInfraCredentialDto
		return nil
	}
	valueCreateDeepSeekCredentialDto := new(CreateDeepSeekCredentialDto)
	if err := json.Unmarshal(data, &valueCreateDeepSeekCredentialDto); err == nil {
		u.typ = "CreateDeepSeekCredentialDto"
		u.CreateDeepSeekCredentialDto = valueCreateDeepSeekCredentialDto
		return nil
	}
	valueCreateGcpCredentialDto := new(CreateGcpCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGcpCredentialDto); err == nil {
		u.typ = "CreateGcpCredentialDto"
		u.CreateGcpCredentialDto = valueCreateGcpCredentialDto
		return nil
	}
	valueCreateGladiaCredentialDto := new(CreateGladiaCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGladiaCredentialDto); err == nil {
		u.typ = "CreateGladiaCredentialDto"
		u.CreateGladiaCredentialDto = valueCreateGladiaCredentialDto
		return nil
	}
	valueCreateGoHighLevelCredentialDto := new(CreateGoHighLevelCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoHighLevelCredentialDto); err == nil {
		u.typ = "CreateGoHighLevelCredentialDto"
		u.CreateGoHighLevelCredentialDto = valueCreateGoHighLevelCredentialDto
		return nil
	}
	valueCreateGoogleCredentialDto := new(CreateGoogleCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCredentialDto); err == nil {
		u.typ = "CreateGoogleCredentialDto"
		u.CreateGoogleCredentialDto = valueCreateGoogleCredentialDto
		return nil
	}
	valueCreateGroqCredentialDto := new(CreateGroqCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGroqCredentialDto); err == nil {
		u.typ = "CreateGroqCredentialDto"
		u.CreateGroqCredentialDto = valueCreateGroqCredentialDto
		return nil
	}
	valueCreateInflectionAiCredentialDto := new(CreateInflectionAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateInflectionAiCredentialDto); err == nil {
		u.typ = "CreateInflectionAiCredentialDto"
		u.CreateInflectionAiCredentialDto = valueCreateInflectionAiCredentialDto
		return nil
	}
	valueCreateLangfuseCredentialDto := new(CreateLangfuseCredentialDto)
	if err := json.Unmarshal(data, &valueCreateLangfuseCredentialDto); err == nil {
		u.typ = "CreateLangfuseCredentialDto"
		u.CreateLangfuseCredentialDto = valueCreateLangfuseCredentialDto
		return nil
	}
	valueCreateLmntCredentialDto := new(CreateLmntCredentialDto)
	if err := json.Unmarshal(data, &valueCreateLmntCredentialDto); err == nil {
		u.typ = "CreateLmntCredentialDto"
		u.CreateLmntCredentialDto = valueCreateLmntCredentialDto
		return nil
	}
	valueCreateMakeCredentialDto := new(CreateMakeCredentialDto)
	if err := json.Unmarshal(data, &valueCreateMakeCredentialDto); err == nil {
		u.typ = "CreateMakeCredentialDto"
		u.CreateMakeCredentialDto = valueCreateMakeCredentialDto
		return nil
	}
	valueCreateOpenAiCredentialDto := new(CreateOpenAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateOpenAiCredentialDto); err == nil {
		u.typ = "CreateOpenAiCredentialDto"
		u.CreateOpenAiCredentialDto = valueCreateOpenAiCredentialDto
		return nil
	}
	valueCreateOpenRouterCredentialDto := new(CreateOpenRouterCredentialDto)
	if err := json.Unmarshal(data, &valueCreateOpenRouterCredentialDto); err == nil {
		u.typ = "CreateOpenRouterCredentialDto"
		u.CreateOpenRouterCredentialDto = valueCreateOpenRouterCredentialDto
		return nil
	}
	valueCreatePerplexityAiCredentialDto := new(CreatePerplexityAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreatePerplexityAiCredentialDto); err == nil {
		u.typ = "CreatePerplexityAiCredentialDto"
		u.CreatePerplexityAiCredentialDto = valueCreatePerplexityAiCredentialDto
		return nil
	}
	valueCreatePlayHtCredentialDto := new(CreatePlayHtCredentialDto)
	if err := json.Unmarshal(data, &valueCreatePlayHtCredentialDto); err == nil {
		u.typ = "CreatePlayHtCredentialDto"
		u.CreatePlayHtCredentialDto = valueCreatePlayHtCredentialDto
		return nil
	}
	valueCreateRimeAiCredentialDto := new(CreateRimeAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateRimeAiCredentialDto); err == nil {
		u.typ = "CreateRimeAiCredentialDto"
		u.CreateRimeAiCredentialDto = valueCreateRimeAiCredentialDto
		return nil
	}
	valueCreateRunpodCredentialDto := new(CreateRunpodCredentialDto)
	if err := json.Unmarshal(data, &valueCreateRunpodCredentialDto); err == nil {
		u.typ = "CreateRunpodCredentialDto"
		u.CreateRunpodCredentialDto = valueCreateRunpodCredentialDto
		return nil
	}
	valueCreateS3CredentialDto := new(CreateS3CredentialDto)
	if err := json.Unmarshal(data, &valueCreateS3CredentialDto); err == nil {
		u.typ = "CreateS3CredentialDto"
		u.CreateS3CredentialDto = valueCreateS3CredentialDto
		return nil
	}
	valueCreateSupabaseCredentialDto := new(CreateSupabaseCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSupabaseCredentialDto); err == nil {
		u.typ = "CreateSupabaseCredentialDto"
		u.CreateSupabaseCredentialDto = valueCreateSupabaseCredentialDto
		return nil
	}
	valueCreateSmallestAiCredentialDto := new(CreateSmallestAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSmallestAiCredentialDto); err == nil {
		u.typ = "CreateSmallestAiCredentialDto"
		u.CreateSmallestAiCredentialDto = valueCreateSmallestAiCredentialDto
		return nil
	}
	valueCreateTavusCredentialDto := new(CreateTavusCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTavusCredentialDto); err == nil {
		u.typ = "CreateTavusCredentialDto"
		u.CreateTavusCredentialDto = valueCreateTavusCredentialDto
		return nil
	}
	valueCreateTogetherAiCredentialDto := new(CreateTogetherAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTogetherAiCredentialDto); err == nil {
		u.typ = "CreateTogetherAiCredentialDto"
		u.CreateTogetherAiCredentialDto = valueCreateTogetherAiCredentialDto
		return nil
	}
	valueCreateTwilioCredentialDto := new(CreateTwilioCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTwilioCredentialDto); err == nil {
		u.typ = "CreateTwilioCredentialDto"
		u.CreateTwilioCredentialDto = valueCreateTwilioCredentialDto
		return nil
	}
	valueCreateVonageCredentialDto := new(CreateVonageCredentialDto)
	if err := json.Unmarshal(data, &valueCreateVonageCredentialDto); err == nil {
		u.typ = "CreateVonageCredentialDto"
		u.CreateVonageCredentialDto = valueCreateVonageCredentialDto
		return nil
	}
	valueCreateWebhookCredentialDto := new(CreateWebhookCredentialDto)
	if err := json.Unmarshal(data, &valueCreateWebhookCredentialDto); err == nil {
		u.typ = "CreateWebhookCredentialDto"
		u.CreateWebhookCredentialDto = valueCreateWebhookCredentialDto
		return nil
	}
	valueCreateXAiCredentialDto := new(CreateXAiCredentialDto)
	if err := json.Unmarshal(data, &valueCreateXAiCredentialDto); err == nil {
		u.typ = "CreateXAiCredentialDto"
		u.CreateXAiCredentialDto = valueCreateXAiCredentialDto
		return nil
	}
	valueCreateNeuphonicCredentialDto := new(CreateNeuphonicCredentialDto)
	if err := json.Unmarshal(data, &valueCreateNeuphonicCredentialDto); err == nil {
		u.typ = "CreateNeuphonicCredentialDto"
		u.CreateNeuphonicCredentialDto = valueCreateNeuphonicCredentialDto
		return nil
	}
	valueCreateHumeCredentialDto := new(CreateHumeCredentialDto)
	if err := json.Unmarshal(data, &valueCreateHumeCredentialDto); err == nil {
		u.typ = "CreateHumeCredentialDto"
		u.CreateHumeCredentialDto = valueCreateHumeCredentialDto
		return nil
	}
	valueCreateMistralCredentialDto := new(CreateMistralCredentialDto)
	if err := json.Unmarshal(data, &valueCreateMistralCredentialDto); err == nil {
		u.typ = "CreateMistralCredentialDto"
		u.CreateMistralCredentialDto = valueCreateMistralCredentialDto
		return nil
	}
	valueCreateSpeechmaticsCredentialDto := new(CreateSpeechmaticsCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSpeechmaticsCredentialDto); err == nil {
		u.typ = "CreateSpeechmaticsCredentialDto"
		u.CreateSpeechmaticsCredentialDto = valueCreateSpeechmaticsCredentialDto
		return nil
	}
	valueCreateTrieveCredentialDto := new(CreateTrieveCredentialDto)
	if err := json.Unmarshal(data, &valueCreateTrieveCredentialDto); err == nil {
		u.typ = "CreateTrieveCredentialDto"
		u.CreateTrieveCredentialDto = valueCreateTrieveCredentialDto
		return nil
	}
	valueCreateGoogleCalendarOAuth2ClientCredentialDto := new(CreateGoogleCalendarOAuth2ClientCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCalendarOAuth2ClientCredentialDto); err == nil {
		u.typ = "CreateGoogleCalendarOAuth2ClientCredentialDto"
		u.CreateGoogleCalendarOAuth2ClientCredentialDto = valueCreateGoogleCalendarOAuth2ClientCredentialDto
		return nil
	}
	valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto := new(CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto); err == nil {
		u.typ = "CreateGoogleCalendarOAuth2AuthorizationCredentialDto"
		u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto = valueCreateGoogleCalendarOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto := new(CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto); err == nil {
		u.typ = "CreateGoogleSheetsOAuth2AuthorizationCredentialDto"
		u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto = valueCreateGoogleSheetsOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateSlackOAuth2AuthorizationCredentialDto := new(CreateSlackOAuth2AuthorizationCredentialDto)
	if err := json.Unmarshal(data, &valueCreateSlackOAuth2AuthorizationCredentialDto); err == nil {
		u.typ = "CreateSlackOAuth2AuthorizationCredentialDto"
		u.CreateSlackOAuth2AuthorizationCredentialDto = valueCreateSlackOAuth2AuthorizationCredentialDto
		return nil
	}
	valueCreateGoHighLevelMcpCredentialDto := new(CreateGoHighLevelMcpCredentialDto)
	if err := json.Unmarshal(data, &valueCreateGoHighLevelMcpCredentialDto); err == nil {
		u.typ = "CreateGoHighLevelMcpCredentialDto"
		u.CreateGoHighLevelMcpCredentialDto = valueCreateGoHighLevelMcpCredentialDto
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, u)
}

func (u UpdateWorkflowDtoCredentialsItem) MarshalJSON() ([]byte, error) {
	if u.typ == "CreateElevenLabsCredentialDto" || u.CreateElevenLabsCredentialDto != nil {
		return json.Marshal(u.CreateElevenLabsCredentialDto)
	}
	if u.typ == "CreateAnthropicCredentialDto" || u.CreateAnthropicCredentialDto != nil {
		return json.Marshal(u.CreateAnthropicCredentialDto)
	}
	if u.typ == "CreateAnyscaleCredentialDto" || u.CreateAnyscaleCredentialDto != nil {
		return json.Marshal(u.CreateAnyscaleCredentialDto)
	}
	if u.typ == "CreateAssemblyAiCredentialDto" || u.CreateAssemblyAiCredentialDto != nil {
		return json.Marshal(u.CreateAssemblyAiCredentialDto)
	}
	if u.typ == "CreateAzureOpenAiCredentialDto" || u.CreateAzureOpenAiCredentialDto != nil {
		return json.Marshal(u.CreateAzureOpenAiCredentialDto)
	}
	if u.typ == "CreateAzureCredentialDto" || u.CreateAzureCredentialDto != nil {
		return json.Marshal(u.CreateAzureCredentialDto)
	}
	if u.typ == "CreateByoSipTrunkCredentialDto" || u.CreateByoSipTrunkCredentialDto != nil {
		return json.Marshal(u.CreateByoSipTrunkCredentialDto)
	}
	if u.typ == "CreateCartesiaCredentialDto" || u.CreateCartesiaCredentialDto != nil {
		return json.Marshal(u.CreateCartesiaCredentialDto)
	}
	if u.typ == "CreateCerebrasCredentialDto" || u.CreateCerebrasCredentialDto != nil {
		return json.Marshal(u.CreateCerebrasCredentialDto)
	}
	if u.typ == "CreateCloudflareCredentialDto" || u.CreateCloudflareCredentialDto != nil {
		return json.Marshal(u.CreateCloudflareCredentialDto)
	}
	if u.typ == "CreateCustomLlmCredentialDto" || u.CreateCustomLlmCredentialDto != nil {
		return json.Marshal(u.CreateCustomLlmCredentialDto)
	}
	if u.typ == "CreateDeepgramCredentialDto" || u.CreateDeepgramCredentialDto != nil {
		return json.Marshal(u.CreateDeepgramCredentialDto)
	}
	if u.typ == "CreateDeepInfraCredentialDto" || u.CreateDeepInfraCredentialDto != nil {
		return json.Marshal(u.CreateDeepInfraCredentialDto)
	}
	if u.typ == "CreateDeepSeekCredentialDto" || u.CreateDeepSeekCredentialDto != nil {
		return json.Marshal(u.CreateDeepSeekCredentialDto)
	}
	if u.typ == "CreateGcpCredentialDto" || u.CreateGcpCredentialDto != nil {
		return json.Marshal(u.CreateGcpCredentialDto)
	}
	if u.typ == "CreateGladiaCredentialDto" || u.CreateGladiaCredentialDto != nil {
		return json.Marshal(u.CreateGladiaCredentialDto)
	}
	if u.typ == "CreateGoHighLevelCredentialDto" || u.CreateGoHighLevelCredentialDto != nil {
		return json.Marshal(u.CreateGoHighLevelCredentialDto)
	}
	if u.typ == "CreateGoogleCredentialDto" || u.CreateGoogleCredentialDto != nil {
		return json.Marshal(u.CreateGoogleCredentialDto)
	}
	if u.typ == "CreateGroqCredentialDto" || u.CreateGroqCredentialDto != nil {
		return json.Marshal(u.CreateGroqCredentialDto)
	}
	if u.typ == "CreateInflectionAiCredentialDto" || u.CreateInflectionAiCredentialDto != nil {
		return json.Marshal(u.CreateInflectionAiCredentialDto)
	}
	if u.typ == "CreateLangfuseCredentialDto" || u.CreateLangfuseCredentialDto != nil {
		return json.Marshal(u.CreateLangfuseCredentialDto)
	}
	if u.typ == "CreateLmntCredentialDto" || u.CreateLmntCredentialDto != nil {
		return json.Marshal(u.CreateLmntCredentialDto)
	}
	if u.typ == "CreateMakeCredentialDto" || u.CreateMakeCredentialDto != nil {
		return json.Marshal(u.CreateMakeCredentialDto)
	}
	if u.typ == "CreateOpenAiCredentialDto" || u.CreateOpenAiCredentialDto != nil {
		return json.Marshal(u.CreateOpenAiCredentialDto)
	}
	if u.typ == "CreateOpenRouterCredentialDto" || u.CreateOpenRouterCredentialDto != nil {
		return json.Marshal(u.CreateOpenRouterCredentialDto)
	}
	if u.typ == "CreatePerplexityAiCredentialDto" || u.CreatePerplexityAiCredentialDto != nil {
		return json.Marshal(u.CreatePerplexityAiCredentialDto)
	}
	if u.typ == "CreatePlayHtCredentialDto" || u.CreatePlayHtCredentialDto != nil {
		return json.Marshal(u.CreatePlayHtCredentialDto)
	}
	if u.typ == "CreateRimeAiCredentialDto" || u.CreateRimeAiCredentialDto != nil {
		return json.Marshal(u.CreateRimeAiCredentialDto)
	}
	if u.typ == "CreateRunpodCredentialDto" || u.CreateRunpodCredentialDto != nil {
		return json.Marshal(u.CreateRunpodCredentialDto)
	}
	if u.typ == "CreateS3CredentialDto" || u.CreateS3CredentialDto != nil {
		return json.Marshal(u.CreateS3CredentialDto)
	}
	if u.typ == "CreateSupabaseCredentialDto" || u.CreateSupabaseCredentialDto != nil {
		return json.Marshal(u.CreateSupabaseCredentialDto)
	}
	if u.typ == "CreateSmallestAiCredentialDto" || u.CreateSmallestAiCredentialDto != nil {
		return json.Marshal(u.CreateSmallestAiCredentialDto)
	}
	if u.typ == "CreateTavusCredentialDto" || u.CreateTavusCredentialDto != nil {
		return json.Marshal(u.CreateTavusCredentialDto)
	}
	if u.typ == "CreateTogetherAiCredentialDto" || u.CreateTogetherAiCredentialDto != nil {
		return json.Marshal(u.CreateTogetherAiCredentialDto)
	}
	if u.typ == "CreateTwilioCredentialDto" || u.CreateTwilioCredentialDto != nil {
		return json.Marshal(u.CreateTwilioCredentialDto)
	}
	if u.typ == "CreateVonageCredentialDto" || u.CreateVonageCredentialDto != nil {
		return json.Marshal(u.CreateVonageCredentialDto)
	}
	if u.typ == "CreateWebhookCredentialDto" || u.CreateWebhookCredentialDto != nil {
		return json.Marshal(u.CreateWebhookCredentialDto)
	}
	if u.typ == "CreateXAiCredentialDto" || u.CreateXAiCredentialDto != nil {
		return json.Marshal(u.CreateXAiCredentialDto)
	}
	if u.typ == "CreateNeuphonicCredentialDto" || u.CreateNeuphonicCredentialDto != nil {
		return json.Marshal(u.CreateNeuphonicCredentialDto)
	}
	if u.typ == "CreateHumeCredentialDto" || u.CreateHumeCredentialDto != nil {
		return json.Marshal(u.CreateHumeCredentialDto)
	}
	if u.typ == "CreateMistralCredentialDto" || u.CreateMistralCredentialDto != nil {
		return json.Marshal(u.CreateMistralCredentialDto)
	}
	if u.typ == "CreateSpeechmaticsCredentialDto" || u.CreateSpeechmaticsCredentialDto != nil {
		return json.Marshal(u.CreateSpeechmaticsCredentialDto)
	}
	if u.typ == "CreateTrieveCredentialDto" || u.CreateTrieveCredentialDto != nil {
		return json.Marshal(u.CreateTrieveCredentialDto)
	}
	if u.typ == "CreateGoogleCalendarOAuth2ClientCredentialDto" || u.CreateGoogleCalendarOAuth2ClientCredentialDto != nil {
		return json.Marshal(u.CreateGoogleCalendarOAuth2ClientCredentialDto)
	}
	if u.typ == "CreateGoogleCalendarOAuth2AuthorizationCredentialDto" || u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateGoogleSheetsOAuth2AuthorizationCredentialDto" || u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateSlackOAuth2AuthorizationCredentialDto" || u.CreateSlackOAuth2AuthorizationCredentialDto != nil {
		return json.Marshal(u.CreateSlackOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateGoHighLevelMcpCredentialDto" || u.CreateGoHighLevelMcpCredentialDto != nil {
		return json.Marshal(u.CreateGoHighLevelMcpCredentialDto)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", u)
}

type UpdateWorkflowDtoCredentialsItemVisitor interface {
	VisitCreateElevenLabsCredentialDto(*CreateElevenLabsCredentialDto) error
	VisitCreateAnthropicCredentialDto(*CreateAnthropicCredentialDto) error
	VisitCreateAnyscaleCredentialDto(*CreateAnyscaleCredentialDto) error
	VisitCreateAssemblyAiCredentialDto(*CreateAssemblyAiCredentialDto) error
	VisitCreateAzureOpenAiCredentialDto(*CreateAzureOpenAiCredentialDto) error
	VisitCreateAzureCredentialDto(*CreateAzureCredentialDto) error
	VisitCreateByoSipTrunkCredentialDto(*CreateByoSipTrunkCredentialDto) error
	VisitCreateCartesiaCredentialDto(*CreateCartesiaCredentialDto) error
	VisitCreateCerebrasCredentialDto(*CreateCerebrasCredentialDto) error
	VisitCreateCloudflareCredentialDto(*CreateCloudflareCredentialDto) error
	VisitCreateCustomLlmCredentialDto(*CreateCustomLlmCredentialDto) error
	VisitCreateDeepgramCredentialDto(*CreateDeepgramCredentialDto) error
	VisitCreateDeepInfraCredentialDto(*CreateDeepInfraCredentialDto) error
	VisitCreateDeepSeekCredentialDto(*CreateDeepSeekCredentialDto) error
	VisitCreateGcpCredentialDto(*CreateGcpCredentialDto) error
	VisitCreateGladiaCredentialDto(*CreateGladiaCredentialDto) error
	VisitCreateGoHighLevelCredentialDto(*CreateGoHighLevelCredentialDto) error
	VisitCreateGoogleCredentialDto(*CreateGoogleCredentialDto) error
	VisitCreateGroqCredentialDto(*CreateGroqCredentialDto) error
	VisitCreateInflectionAiCredentialDto(*CreateInflectionAiCredentialDto) error
	VisitCreateLangfuseCredentialDto(*CreateLangfuseCredentialDto) error
	VisitCreateLmntCredentialDto(*CreateLmntCredentialDto) error
	VisitCreateMakeCredentialDto(*CreateMakeCredentialDto) error
	VisitCreateOpenAiCredentialDto(*CreateOpenAiCredentialDto) error
	VisitCreateOpenRouterCredentialDto(*CreateOpenRouterCredentialDto) error
	VisitCreatePerplexityAiCredentialDto(*CreatePerplexityAiCredentialDto) error
	VisitCreatePlayHtCredentialDto(*CreatePlayHtCredentialDto) error
	VisitCreateRimeAiCredentialDto(*CreateRimeAiCredentialDto) error
	VisitCreateRunpodCredentialDto(*CreateRunpodCredentialDto) error
	VisitCreateS3CredentialDto(*CreateS3CredentialDto) error
	VisitCreateSupabaseCredentialDto(*CreateSupabaseCredentialDto) error
	VisitCreateSmallestAiCredentialDto(*CreateSmallestAiCredentialDto) error
	VisitCreateTavusCredentialDto(*CreateTavusCredentialDto) error
	VisitCreateTogetherAiCredentialDto(*CreateTogetherAiCredentialDto) error
	VisitCreateTwilioCredentialDto(*CreateTwilioCredentialDto) error
	VisitCreateVonageCredentialDto(*CreateVonageCredentialDto) error
	VisitCreateWebhookCredentialDto(*CreateWebhookCredentialDto) error
	VisitCreateXAiCredentialDto(*CreateXAiCredentialDto) error
	VisitCreateNeuphonicCredentialDto(*CreateNeuphonicCredentialDto) error
	VisitCreateHumeCredentialDto(*CreateHumeCredentialDto) error
	VisitCreateMistralCredentialDto(*CreateMistralCredentialDto) error
	VisitCreateSpeechmaticsCredentialDto(*CreateSpeechmaticsCredentialDto) error
	VisitCreateTrieveCredentialDto(*CreateTrieveCredentialDto) error
	VisitCreateGoogleCalendarOAuth2ClientCredentialDto(*CreateGoogleCalendarOAuth2ClientCredentialDto) error
	VisitCreateGoogleCalendarOAuth2AuthorizationCredentialDto(*CreateGoogleCalendarOAuth2AuthorizationCredentialDto) error
	VisitCreateGoogleSheetsOAuth2AuthorizationCredentialDto(*CreateGoogleSheetsOAuth2AuthorizationCredentialDto) error
	VisitCreateSlackOAuth2AuthorizationCredentialDto(*CreateSlackOAuth2AuthorizationCredentialDto) error
	VisitCreateGoHighLevelMcpCredentialDto(*CreateGoHighLevelMcpCredentialDto) error
}

func (u *UpdateWorkflowDtoCredentialsItem) Accept(visitor UpdateWorkflowDtoCredentialsItemVisitor) error {
	if u.typ == "CreateElevenLabsCredentialDto" || u.CreateElevenLabsCredentialDto != nil {
		return visitor.VisitCreateElevenLabsCredentialDto(u.CreateElevenLabsCredentialDto)
	}
	if u.typ == "CreateAnthropicCredentialDto" || u.CreateAnthropicCredentialDto != nil {
		return visitor.VisitCreateAnthropicCredentialDto(u.CreateAnthropicCredentialDto)
	}
	if u.typ == "CreateAnyscaleCredentialDto" || u.CreateAnyscaleCredentialDto != nil {
		return visitor.VisitCreateAnyscaleCredentialDto(u.CreateAnyscaleCredentialDto)
	}
	if u.typ == "CreateAssemblyAiCredentialDto" || u.CreateAssemblyAiCredentialDto != nil {
		return visitor.VisitCreateAssemblyAiCredentialDto(u.CreateAssemblyAiCredentialDto)
	}
	if u.typ == "CreateAzureOpenAiCredentialDto" || u.CreateAzureOpenAiCredentialDto != nil {
		return visitor.VisitCreateAzureOpenAiCredentialDto(u.CreateAzureOpenAiCredentialDto)
	}
	if u.typ == "CreateAzureCredentialDto" || u.CreateAzureCredentialDto != nil {
		return visitor.VisitCreateAzureCredentialDto(u.CreateAzureCredentialDto)
	}
	if u.typ == "CreateByoSipTrunkCredentialDto" || u.CreateByoSipTrunkCredentialDto != nil {
		return visitor.VisitCreateByoSipTrunkCredentialDto(u.CreateByoSipTrunkCredentialDto)
	}
	if u.typ == "CreateCartesiaCredentialDto" || u.CreateCartesiaCredentialDto != nil {
		return visitor.VisitCreateCartesiaCredentialDto(u.CreateCartesiaCredentialDto)
	}
	if u.typ == "CreateCerebrasCredentialDto" || u.CreateCerebrasCredentialDto != nil {
		return visitor.VisitCreateCerebrasCredentialDto(u.CreateCerebrasCredentialDto)
	}
	if u.typ == "CreateCloudflareCredentialDto" || u.CreateCloudflareCredentialDto != nil {
		return visitor.VisitCreateCloudflareCredentialDto(u.CreateCloudflareCredentialDto)
	}
	if u.typ == "CreateCustomLlmCredentialDto" || u.CreateCustomLlmCredentialDto != nil {
		return visitor.VisitCreateCustomLlmCredentialDto(u.CreateCustomLlmCredentialDto)
	}
	if u.typ == "CreateDeepgramCredentialDto" || u.CreateDeepgramCredentialDto != nil {
		return visitor.VisitCreateDeepgramCredentialDto(u.CreateDeepgramCredentialDto)
	}
	if u.typ == "CreateDeepInfraCredentialDto" || u.CreateDeepInfraCredentialDto != nil {
		return visitor.VisitCreateDeepInfraCredentialDto(u.CreateDeepInfraCredentialDto)
	}
	if u.typ == "CreateDeepSeekCredentialDto" || u.CreateDeepSeekCredentialDto != nil {
		return visitor.VisitCreateDeepSeekCredentialDto(u.CreateDeepSeekCredentialDto)
	}
	if u.typ == "CreateGcpCredentialDto" || u.CreateGcpCredentialDto != nil {
		return visitor.VisitCreateGcpCredentialDto(u.CreateGcpCredentialDto)
	}
	if u.typ == "CreateGladiaCredentialDto" || u.CreateGladiaCredentialDto != nil {
		return visitor.VisitCreateGladiaCredentialDto(u.CreateGladiaCredentialDto)
	}
	if u.typ == "CreateGoHighLevelCredentialDto" || u.CreateGoHighLevelCredentialDto != nil {
		return visitor.VisitCreateGoHighLevelCredentialDto(u.CreateGoHighLevelCredentialDto)
	}
	if u.typ == "CreateGoogleCredentialDto" || u.CreateGoogleCredentialDto != nil {
		return visitor.VisitCreateGoogleCredentialDto(u.CreateGoogleCredentialDto)
	}
	if u.typ == "CreateGroqCredentialDto" || u.CreateGroqCredentialDto != nil {
		return visitor.VisitCreateGroqCredentialDto(u.CreateGroqCredentialDto)
	}
	if u.typ == "CreateInflectionAiCredentialDto" || u.CreateInflectionAiCredentialDto != nil {
		return visitor.VisitCreateInflectionAiCredentialDto(u.CreateInflectionAiCredentialDto)
	}
	if u.typ == "CreateLangfuseCredentialDto" || u.CreateLangfuseCredentialDto != nil {
		return visitor.VisitCreateLangfuseCredentialDto(u.CreateLangfuseCredentialDto)
	}
	if u.typ == "CreateLmntCredentialDto" || u.CreateLmntCredentialDto != nil {
		return visitor.VisitCreateLmntCredentialDto(u.CreateLmntCredentialDto)
	}
	if u.typ == "CreateMakeCredentialDto" || u.CreateMakeCredentialDto != nil {
		return visitor.VisitCreateMakeCredentialDto(u.CreateMakeCredentialDto)
	}
	if u.typ == "CreateOpenAiCredentialDto" || u.CreateOpenAiCredentialDto != nil {
		return visitor.VisitCreateOpenAiCredentialDto(u.CreateOpenAiCredentialDto)
	}
	if u.typ == "CreateOpenRouterCredentialDto" || u.CreateOpenRouterCredentialDto != nil {
		return visitor.VisitCreateOpenRouterCredentialDto(u.CreateOpenRouterCredentialDto)
	}
	if u.typ == "CreatePerplexityAiCredentialDto" || u.CreatePerplexityAiCredentialDto != nil {
		return visitor.VisitCreatePerplexityAiCredentialDto(u.CreatePerplexityAiCredentialDto)
	}
	if u.typ == "CreatePlayHtCredentialDto" || u.CreatePlayHtCredentialDto != nil {
		return visitor.VisitCreatePlayHtCredentialDto(u.CreatePlayHtCredentialDto)
	}
	if u.typ == "CreateRimeAiCredentialDto" || u.CreateRimeAiCredentialDto != nil {
		return visitor.VisitCreateRimeAiCredentialDto(u.CreateRimeAiCredentialDto)
	}
	if u.typ == "CreateRunpodCredentialDto" || u.CreateRunpodCredentialDto != nil {
		return visitor.VisitCreateRunpodCredentialDto(u.CreateRunpodCredentialDto)
	}
	if u.typ == "CreateS3CredentialDto" || u.CreateS3CredentialDto != nil {
		return visitor.VisitCreateS3CredentialDto(u.CreateS3CredentialDto)
	}
	if u.typ == "CreateSupabaseCredentialDto" || u.CreateSupabaseCredentialDto != nil {
		return visitor.VisitCreateSupabaseCredentialDto(u.CreateSupabaseCredentialDto)
	}
	if u.typ == "CreateSmallestAiCredentialDto" || u.CreateSmallestAiCredentialDto != nil {
		return visitor.VisitCreateSmallestAiCredentialDto(u.CreateSmallestAiCredentialDto)
	}
	if u.typ == "CreateTavusCredentialDto" || u.CreateTavusCredentialDto != nil {
		return visitor.VisitCreateTavusCredentialDto(u.CreateTavusCredentialDto)
	}
	if u.typ == "CreateTogetherAiCredentialDto" || u.CreateTogetherAiCredentialDto != nil {
		return visitor.VisitCreateTogetherAiCredentialDto(u.CreateTogetherAiCredentialDto)
	}
	if u.typ == "CreateTwilioCredentialDto" || u.CreateTwilioCredentialDto != nil {
		return visitor.VisitCreateTwilioCredentialDto(u.CreateTwilioCredentialDto)
	}
	if u.typ == "CreateVonageCredentialDto" || u.CreateVonageCredentialDto != nil {
		return visitor.VisitCreateVonageCredentialDto(u.CreateVonageCredentialDto)
	}
	if u.typ == "CreateWebhookCredentialDto" || u.CreateWebhookCredentialDto != nil {
		return visitor.VisitCreateWebhookCredentialDto(u.CreateWebhookCredentialDto)
	}
	if u.typ == "CreateXAiCredentialDto" || u.CreateXAiCredentialDto != nil {
		return visitor.VisitCreateXAiCredentialDto(u.CreateXAiCredentialDto)
	}
	if u.typ == "CreateNeuphonicCredentialDto" || u.CreateNeuphonicCredentialDto != nil {
		return visitor.VisitCreateNeuphonicCredentialDto(u.CreateNeuphonicCredentialDto)
	}
	if u.typ == "CreateHumeCredentialDto" || u.CreateHumeCredentialDto != nil {
		return visitor.VisitCreateHumeCredentialDto(u.CreateHumeCredentialDto)
	}
	if u.typ == "CreateMistralCredentialDto" || u.CreateMistralCredentialDto != nil {
		return visitor.VisitCreateMistralCredentialDto(u.CreateMistralCredentialDto)
	}
	if u.typ == "CreateSpeechmaticsCredentialDto" || u.CreateSpeechmaticsCredentialDto != nil {
		return visitor.VisitCreateSpeechmaticsCredentialDto(u.CreateSpeechmaticsCredentialDto)
	}
	if u.typ == "CreateTrieveCredentialDto" || u.CreateTrieveCredentialDto != nil {
		return visitor.VisitCreateTrieveCredentialDto(u.CreateTrieveCredentialDto)
	}
	if u.typ == "CreateGoogleCalendarOAuth2ClientCredentialDto" || u.CreateGoogleCalendarOAuth2ClientCredentialDto != nil {
		return visitor.VisitCreateGoogleCalendarOAuth2ClientCredentialDto(u.CreateGoogleCalendarOAuth2ClientCredentialDto)
	}
	if u.typ == "CreateGoogleCalendarOAuth2AuthorizationCredentialDto" || u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateGoogleCalendarOAuth2AuthorizationCredentialDto(u.CreateGoogleCalendarOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateGoogleSheetsOAuth2AuthorizationCredentialDto" || u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateGoogleSheetsOAuth2AuthorizationCredentialDto(u.CreateGoogleSheetsOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateSlackOAuth2AuthorizationCredentialDto" || u.CreateSlackOAuth2AuthorizationCredentialDto != nil {
		return visitor.VisitCreateSlackOAuth2AuthorizationCredentialDto(u.CreateSlackOAuth2AuthorizationCredentialDto)
	}
	if u.typ == "CreateGoHighLevelMcpCredentialDto" || u.CreateGoHighLevelMcpCredentialDto != nil {
		return visitor.VisitCreateGoHighLevelMcpCredentialDto(u.CreateGoHighLevelMcpCredentialDto)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", u)
}

type UpdateWorkflowDtoNodesItem struct {
	ConversationNode *ConversationNode
	ToolNode         *ToolNode

	typ string
}

func (u *UpdateWorkflowDtoNodesItem) GetConversationNode() *ConversationNode {
	if u == nil {
		return nil
	}
	return u.ConversationNode
}

func (u *UpdateWorkflowDtoNodesItem) GetToolNode() *ToolNode {
	if u == nil {
		return nil
	}
	return u.ToolNode
}

func (u *UpdateWorkflowDtoNodesItem) UnmarshalJSON(data []byte) error {
	valueConversationNode := new(ConversationNode)
	if err := json.Unmarshal(data, &valueConversationNode); err == nil {
		u.typ = "ConversationNode"
		u.ConversationNode = valueConversationNode
		return nil
	}
	valueToolNode := new(ToolNode)
	if err := json.Unmarshal(data, &valueToolNode); err == nil {
		u.typ = "ToolNode"
		u.ToolNode = valueToolNode
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, u)
}

func (u UpdateWorkflowDtoNodesItem) MarshalJSON() ([]byte, error) {
	if u.typ == "ConversationNode" || u.ConversationNode != nil {
		return json.Marshal(u.ConversationNode)
	}
	if u.typ == "ToolNode" || u.ToolNode != nil {
		return json.Marshal(u.ToolNode)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", u)
}

type UpdateWorkflowDtoNodesItemVisitor interface {
	VisitConversationNode(*ConversationNode) error
	VisitToolNode(*ToolNode) error
}

func (u *UpdateWorkflowDtoNodesItem) Accept(visitor UpdateWorkflowDtoNodesItemVisitor) error {
	if u.typ == "ConversationNode" || u.ConversationNode != nil {
		return visitor.VisitConversationNode(u.ConversationNode)
	}
	if u.typ == "ToolNode" || u.ToolNode != nil {
		return visitor.VisitToolNode(u.ToolNode)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", u)
}

// This is the transcriber for the workflow.
//
// This can be overridden at node level using `nodes[n].transcriber`.
type UpdateWorkflowDtoTranscriber struct {
	AssemblyAiTranscriber   *AssemblyAiTranscriber
	AzureSpeechTranscriber  *AzureSpeechTranscriber
	CustomTranscriber       *CustomTranscriber
	DeepgramTranscriber     *DeepgramTranscriber
	ElevenLabsTranscriber   *ElevenLabsTranscriber
	GladiaTranscriber       *GladiaTranscriber
	GoogleTranscriber       *GoogleTranscriber
	SpeechmaticsTranscriber *SpeechmaticsTranscriber
	TalkscriberTranscriber  *TalkscriberTranscriber
	OpenAiTranscriber       *OpenAiTranscriber
	CartesiaTranscriber     *CartesiaTranscriber

	typ string
}

func (u *UpdateWorkflowDtoTranscriber) GetAssemblyAiTranscriber() *AssemblyAiTranscriber {
	if u == nil {
		return nil
	}
	return u.AssemblyAiTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetAzureSpeechTranscriber() *AzureSpeechTranscriber {
	if u == nil {
		return nil
	}
	return u.AzureSpeechTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetCustomTranscriber() *CustomTranscriber {
	if u == nil {
		return nil
	}
	return u.CustomTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetDeepgramTranscriber() *DeepgramTranscriber {
	if u == nil {
		return nil
	}
	return u.DeepgramTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetElevenLabsTranscriber() *ElevenLabsTranscriber {
	if u == nil {
		return nil
	}
	return u.ElevenLabsTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetGladiaTranscriber() *GladiaTranscriber {
	if u == nil {
		return nil
	}
	return u.GladiaTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetGoogleTranscriber() *GoogleTranscriber {
	if u == nil {
		return nil
	}
	return u.GoogleTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetSpeechmaticsTranscriber() *SpeechmaticsTranscriber {
	if u == nil {
		return nil
	}
	return u.SpeechmaticsTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetTalkscriberTranscriber() *TalkscriberTranscriber {
	if u == nil {
		return nil
	}
	return u.TalkscriberTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetOpenAiTranscriber() *OpenAiTranscriber {
	if u == nil {
		return nil
	}
	return u.OpenAiTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) GetCartesiaTranscriber() *CartesiaTranscriber {
	if u == nil {
		return nil
	}
	return u.CartesiaTranscriber
}

func (u *UpdateWorkflowDtoTranscriber) UnmarshalJSON(data []byte) error {
	valueAssemblyAiTranscriber := new(AssemblyAiTranscriber)
	if err := json.Unmarshal(data, &valueAssemblyAiTranscriber); err == nil {
		u.typ = "AssemblyAiTranscriber"
		u.AssemblyAiTranscriber = valueAssemblyAiTranscriber
		return nil
	}
	valueAzureSpeechTranscriber := new(AzureSpeechTranscriber)
	if err := json.Unmarshal(data, &valueAzureSpeechTranscriber); err == nil {
		u.typ = "AzureSpeechTranscriber"
		u.AzureSpeechTranscriber = valueAzureSpeechTranscriber
		return nil
	}
	valueCustomTranscriber := new(CustomTranscriber)
	if err := json.Unmarshal(data, &valueCustomTranscriber); err == nil {
		u.typ = "CustomTranscriber"
		u.CustomTranscriber = valueCustomTranscriber
		return nil
	}
	valueDeepgramTranscriber := new(DeepgramTranscriber)
	if err := json.Unmarshal(data, &valueDeepgramTranscriber); err == nil {
		u.typ = "DeepgramTranscriber"
		u.DeepgramTranscriber = valueDeepgramTranscriber
		return nil
	}
	valueElevenLabsTranscriber := new(ElevenLabsTranscriber)
	if err := json.Unmarshal(data, &valueElevenLabsTranscriber); err == nil {
		u.typ = "ElevenLabsTranscriber"
		u.ElevenLabsTranscriber = valueElevenLabsTranscriber
		return nil
	}
	valueGladiaTranscriber := new(GladiaTranscriber)
	if err := json.Unmarshal(data, &valueGladiaTranscriber); err == nil {
		u.typ = "GladiaTranscriber"
		u.GladiaTranscriber = valueGladiaTranscriber
		return nil
	}
	valueGoogleTranscriber := new(GoogleTranscriber)
	if err := json.Unmarshal(data, &valueGoogleTranscriber); err == nil {
		u.typ = "GoogleTranscriber"
		u.GoogleTranscriber = valueGoogleTranscriber
		return nil
	}
	valueSpeechmaticsTranscriber := new(SpeechmaticsTranscriber)
	if err := json.Unmarshal(data, &valueSpeechmaticsTranscriber); err == nil {
		u.typ = "SpeechmaticsTranscriber"
		u.SpeechmaticsTranscriber = valueSpeechmaticsTranscriber
		return nil
	}
	valueTalkscriberTranscriber := new(TalkscriberTranscriber)
	if err := json.Unmarshal(data, &valueTalkscriberTranscriber); err == nil {
		u.typ = "TalkscriberTranscriber"
		u.TalkscriberTranscriber = valueTalkscriberTranscriber
		return nil
	}
	valueOpenAiTranscriber := new(OpenAiTranscriber)
	if err := json.Unmarshal(data, &valueOpenAiTranscriber); err == nil {
		u.typ = "OpenAiTranscriber"
		u.OpenAiTranscriber = valueOpenAiTranscriber
		return nil
	}
	valueCartesiaTranscriber := new(CartesiaTranscriber)
	if err := json.Unmarshal(data, &valueCartesiaTranscriber); err == nil {
		u.typ = "CartesiaTranscriber"
		u.CartesiaTranscriber = valueCartesiaTranscriber
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, u)
}

func (u UpdateWorkflowDtoTranscriber) MarshalJSON() ([]byte, error) {
	if u.typ == "AssemblyAiTranscriber" || u.AssemblyAiTranscriber != nil {
		return json.Marshal(u.AssemblyAiTranscriber)
	}
	if u.typ == "AzureSpeechTranscriber" || u.AzureSpeechTranscriber != nil {
		return json.Marshal(u.AzureSpeechTranscriber)
	}
	if u.typ == "CustomTranscriber" || u.CustomTranscriber != nil {
		return json.Marshal(u.CustomTranscriber)
	}
	if u.typ == "DeepgramTranscriber" || u.DeepgramTranscriber != nil {
		return json.Marshal(u.DeepgramTranscriber)
	}
	if u.typ == "ElevenLabsTranscriber" || u.ElevenLabsTranscriber != nil {
		return json.Marshal(u.ElevenLabsTranscriber)
	}
	if u.typ == "GladiaTranscriber" || u.GladiaTranscriber != nil {
		return json.Marshal(u.GladiaTranscriber)
	}
	if u.typ == "GoogleTranscriber" || u.GoogleTranscriber != nil {
		return json.Marshal(u.GoogleTranscriber)
	}
	if u.typ == "SpeechmaticsTranscriber" || u.SpeechmaticsTranscriber != nil {
		return json.Marshal(u.SpeechmaticsTranscriber)
	}
	if u.typ == "TalkscriberTranscriber" || u.TalkscriberTranscriber != nil {
		return json.Marshal(u.TalkscriberTranscriber)
	}
	if u.typ == "OpenAiTranscriber" || u.OpenAiTranscriber != nil {
		return json.Marshal(u.OpenAiTranscriber)
	}
	if u.typ == "CartesiaTranscriber" || u.CartesiaTranscriber != nil {
		return json.Marshal(u.CartesiaTranscriber)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", u)
}

type UpdateWorkflowDtoTranscriberVisitor interface {
	VisitAssemblyAiTranscriber(*AssemblyAiTranscriber) error
	VisitAzureSpeechTranscriber(*AzureSpeechTranscriber) error
	VisitCustomTranscriber(*CustomTranscriber) error
	VisitDeepgramTranscriber(*DeepgramTranscriber) error
	VisitElevenLabsTranscriber(*ElevenLabsTranscriber) error
	VisitGladiaTranscriber(*GladiaTranscriber) error
	VisitGoogleTranscriber(*GoogleTranscriber) error
	VisitSpeechmaticsTranscriber(*SpeechmaticsTranscriber) error
	VisitTalkscriberTranscriber(*TalkscriberTranscriber) error
	VisitOpenAiTranscriber(*OpenAiTranscriber) error
	VisitCartesiaTranscriber(*CartesiaTranscriber) error
}

func (u *UpdateWorkflowDtoTranscriber) Accept(visitor UpdateWorkflowDtoTranscriberVisitor) error {
	if u.typ == "AssemblyAiTranscriber" || u.AssemblyAiTranscriber != nil {
		return visitor.VisitAssemblyAiTranscriber(u.AssemblyAiTranscriber)
	}
	if u.typ == "AzureSpeechTranscriber" || u.AzureSpeechTranscriber != nil {
		return visitor.VisitAzureSpeechTranscriber(u.AzureSpeechTranscriber)
	}
	if u.typ == "CustomTranscriber" || u.CustomTranscriber != nil {
		return visitor.VisitCustomTranscriber(u.CustomTranscriber)
	}
	if u.typ == "DeepgramTranscriber" || u.DeepgramTranscriber != nil {
		return visitor.VisitDeepgramTranscriber(u.DeepgramTranscriber)
	}
	if u.typ == "ElevenLabsTranscriber" || u.ElevenLabsTranscriber != nil {
		return visitor.VisitElevenLabsTranscriber(u.ElevenLabsTranscriber)
	}
	if u.typ == "GladiaTranscriber" || u.GladiaTranscriber != nil {
		return visitor.VisitGladiaTranscriber(u.GladiaTranscriber)
	}
	if u.typ == "GoogleTranscriber" || u.GoogleTranscriber != nil {
		return visitor.VisitGoogleTranscriber(u.GoogleTranscriber)
	}
	if u.typ == "SpeechmaticsTranscriber" || u.SpeechmaticsTranscriber != nil {
		return visitor.VisitSpeechmaticsTranscriber(u.SpeechmaticsTranscriber)
	}
	if u.typ == "TalkscriberTranscriber" || u.TalkscriberTranscriber != nil {
		return visitor.VisitTalkscriberTranscriber(u.TalkscriberTranscriber)
	}
	if u.typ == "OpenAiTranscriber" || u.OpenAiTranscriber != nil {
		return visitor.VisitOpenAiTranscriber(u.OpenAiTranscriber)
	}
	if u.typ == "CartesiaTranscriber" || u.CartesiaTranscriber != nil {
		return visitor.VisitCartesiaTranscriber(u.CartesiaTranscriber)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", u)
}

// This is the voice for the workflow.
//
// This can be overridden at node level using `nodes[n].voice`.
type UpdateWorkflowDtoVoice struct {
	AzureVoice      *AzureVoice
	CartesiaVoice   *CartesiaVoice
	CustomVoice     *CustomVoice
	DeepgramVoice   *DeepgramVoice
	ElevenLabsVoice *ElevenLabsVoice
	HumeVoice       *HumeVoice
	LmntVoice       *LmntVoice
	NeuphonicVoice  *NeuphonicVoice
	OpenAiVoice     *OpenAiVoice
	PlayHtVoice     *PlayHtVoice
	RimeAiVoice     *RimeAiVoice
	SmallestAiVoice *SmallestAiVoice
	TavusVoice      *TavusVoice
	VapiVoice       *VapiVoice
	SesameVoice     *SesameVoice

	typ string
}

func (u *UpdateWorkflowDtoVoice) GetAzureVoice() *AzureVoice {
	if u == nil {
		return nil
	}
	return u.AzureVoice
}

func (u *UpdateWorkflowDtoVoice) GetCartesiaVoice() *CartesiaVoice {
	if u == nil {
		return nil
	}
	return u.CartesiaVoice
}

func (u *UpdateWorkflowDtoVoice) GetCustomVoice() *CustomVoice {
	if u == nil {
		return nil
	}
	return u.CustomVoice
}

func (u *UpdateWorkflowDtoVoice) GetDeepgramVoice() *DeepgramVoice {
	if u == nil {
		return nil
	}
	return u.DeepgramVoice
}

func (u *UpdateWorkflowDtoVoice) GetElevenLabsVoice() *ElevenLabsVoice {
	if u == nil {
		return nil
	}
	return u.ElevenLabsVoice
}

func (u *UpdateWorkflowDtoVoice) GetHumeVoice() *HumeVoice {
	if u == nil {
		return nil
	}
	return u.HumeVoice
}

func (u *UpdateWorkflowDtoVoice) GetLmntVoice() *LmntVoice {
	if u == nil {
		return nil
	}
	return u.LmntVoice
}

func (u *UpdateWorkflowDtoVoice) GetNeuphonicVoice() *NeuphonicVoice {
	if u == nil {
		return nil
	}
	return u.NeuphonicVoice
}

func (u *UpdateWorkflowDtoVoice) GetOpenAiVoice() *OpenAiVoice {
	if u == nil {
		return nil
	}
	return u.OpenAiVoice
}

func (u *UpdateWorkflowDtoVoice) GetPlayHtVoice() *PlayHtVoice {
	if u == nil {
		return nil
	}
	return u.PlayHtVoice
}

func (u *UpdateWorkflowDtoVoice) GetRimeAiVoice() *RimeAiVoice {
	if u == nil {
		return nil
	}
	return u.RimeAiVoice
}

func (u *UpdateWorkflowDtoVoice) GetSmallestAiVoice() *SmallestAiVoice {
	if u == nil {
		return nil
	}
	return u.SmallestAiVoice
}

func (u *UpdateWorkflowDtoVoice) GetTavusVoice() *TavusVoice {
	if u == nil {
		return nil
	}
	return u.TavusVoice
}

func (u *UpdateWorkflowDtoVoice) GetVapiVoice() *VapiVoice {
	if u == nil {
		return nil
	}
	return u.VapiVoice
}

func (u *UpdateWorkflowDtoVoice) GetSesameVoice() *SesameVoice {
	if u == nil {
		return nil
	}
	return u.SesameVoice
}

func (u *UpdateWorkflowDtoVoice) UnmarshalJSON(data []byte) error {
	valueAzureVoice := new(AzureVoice)
	if err := json.Unmarshal(data, &valueAzureVoice); err == nil {
		u.typ = "AzureVoice"
		u.AzureVoice = valueAzureVoice
		return nil
	}
	valueCartesiaVoice := new(CartesiaVoice)
	if err := json.Unmarshal(data, &valueCartesiaVoice); err == nil {
		u.typ = "CartesiaVoice"
		u.CartesiaVoice = valueCartesiaVoice
		return nil
	}
	valueCustomVoice := new(CustomVoice)
	if err := json.Unmarshal(data, &valueCustomVoice); err == nil {
		u.typ = "CustomVoice"
		u.CustomVoice = valueCustomVoice
		return nil
	}
	valueDeepgramVoice := new(DeepgramVoice)
	if err := json.Unmarshal(data, &valueDeepgramVoice); err == nil {
		u.typ = "DeepgramVoice"
		u.DeepgramVoice = valueDeepgramVoice
		return nil
	}
	valueElevenLabsVoice := new(ElevenLabsVoice)
	if err := json.Unmarshal(data, &valueElevenLabsVoice); err == nil {
		u.typ = "ElevenLabsVoice"
		u.ElevenLabsVoice = valueElevenLabsVoice
		return nil
	}
	valueHumeVoice := new(HumeVoice)
	if err := json.Unmarshal(data, &valueHumeVoice); err == nil {
		u.typ = "HumeVoice"
		u.HumeVoice = valueHumeVoice
		return nil
	}
	valueLmntVoice := new(LmntVoice)
	if err := json.Unmarshal(data, &valueLmntVoice); err == nil {
		u.typ = "LmntVoice"
		u.LmntVoice = valueLmntVoice
		return nil
	}
	valueNeuphonicVoice := new(NeuphonicVoice)
	if err := json.Unmarshal(data, &valueNeuphonicVoice); err == nil {
		u.typ = "NeuphonicVoice"
		u.NeuphonicVoice = valueNeuphonicVoice
		return nil
	}
	valueOpenAiVoice := new(OpenAiVoice)
	if err := json.Unmarshal(data, &valueOpenAiVoice); err == nil {
		u.typ = "OpenAiVoice"
		u.OpenAiVoice = valueOpenAiVoice
		return nil
	}
	valuePlayHtVoice := new(PlayHtVoice)
	if err := json.Unmarshal(data, &valuePlayHtVoice); err == nil {
		u.typ = "PlayHtVoice"
		u.PlayHtVoice = valuePlayHtVoice
		return nil
	}
	valueRimeAiVoice := new(RimeAiVoice)
	if err := json.Unmarshal(data, &valueRimeAiVoice); err == nil {
		u.typ = "RimeAiVoice"
		u.RimeAiVoice = valueRimeAiVoice
		return nil
	}
	valueSmallestAiVoice := new(SmallestAiVoice)
	if err := json.Unmarshal(data, &valueSmallestAiVoice); err == nil {
		u.typ = "SmallestAiVoice"
		u.SmallestAiVoice = valueSmallestAiVoice
		return nil
	}
	valueTavusVoice := new(TavusVoice)
	if err := json.Unmarshal(data, &valueTavusVoice); err == nil {
		u.typ = "TavusVoice"
		u.TavusVoice = valueTavusVoice
		return nil
	}
	valueVapiVoice := new(VapiVoice)
	if err := json.Unmarshal(data, &valueVapiVoice); err == nil {
		u.typ = "VapiVoice"
		u.VapiVoice = valueVapiVoice
		return nil
	}
	valueSesameVoice := new(SesameVoice)
	if err := json.Unmarshal(data, &valueSesameVoice); err == nil {
		u.typ = "SesameVoice"
		u.SesameVoice = valueSesameVoice
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, u)
}

func (u UpdateWorkflowDtoVoice) MarshalJSON() ([]byte, error) {
	if u.typ == "AzureVoice" || u.AzureVoice != nil {
		return json.Marshal(u.AzureVoice)
	}
	if u.typ == "CartesiaVoice" || u.CartesiaVoice != nil {
		return json.Marshal(u.CartesiaVoice)
	}
	if u.typ == "CustomVoice" || u.CustomVoice != nil {
		return json.Marshal(u.CustomVoice)
	}
	if u.typ == "DeepgramVoice" || u.DeepgramVoice != nil {
		return json.Marshal(u.DeepgramVoice)
	}
	if u.typ == "ElevenLabsVoice" || u.ElevenLabsVoice != nil {
		return json.Marshal(u.ElevenLabsVoice)
	}
	if u.typ == "HumeVoice" || u.HumeVoice != nil {
		return json.Marshal(u.HumeVoice)
	}
	if u.typ == "LmntVoice" || u.LmntVoice != nil {
		return json.Marshal(u.LmntVoice)
	}
	if u.typ == "NeuphonicVoice" || u.NeuphonicVoice != nil {
		return json.Marshal(u.NeuphonicVoice)
	}
	if u.typ == "OpenAiVoice" || u.OpenAiVoice != nil {
		return json.Marshal(u.OpenAiVoice)
	}
	if u.typ == "PlayHtVoice" || u.PlayHtVoice != nil {
		return json.Marshal(u.PlayHtVoice)
	}
	if u.typ == "RimeAiVoice" || u.RimeAiVoice != nil {
		return json.Marshal(u.RimeAiVoice)
	}
	if u.typ == "SmallestAiVoice" || u.SmallestAiVoice != nil {
		return json.Marshal(u.SmallestAiVoice)
	}
	if u.typ == "TavusVoice" || u.TavusVoice != nil {
		return json.Marshal(u.TavusVoice)
	}
	if u.typ == "VapiVoice" || u.VapiVoice != nil {
		return json.Marshal(u.VapiVoice)
	}
	if u.typ == "SesameVoice" || u.SesameVoice != nil {
		return json.Marshal(u.SesameVoice)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", u)
}

type UpdateWorkflowDtoVoiceVisitor interface {
	VisitAzureVoice(*AzureVoice) error
	VisitCartesiaVoice(*CartesiaVoice) error
	VisitCustomVoice(*CustomVoice) error
	VisitDeepgramVoice(*DeepgramVoice) error
	VisitElevenLabsVoice(*ElevenLabsVoice) error
	VisitHumeVoice(*HumeVoice) error
	VisitLmntVoice(*LmntVoice) error
	VisitNeuphonicVoice(*NeuphonicVoice) error
	VisitOpenAiVoice(*OpenAiVoice) error
	VisitPlayHtVoice(*PlayHtVoice) error
	VisitRimeAiVoice(*RimeAiVoice) error
	VisitSmallestAiVoice(*SmallestAiVoice) error
	VisitTavusVoice(*TavusVoice) error
	VisitVapiVoice(*VapiVoice) error
	VisitSesameVoice(*SesameVoice) error
}

func (u *UpdateWorkflowDtoVoice) Accept(visitor UpdateWorkflowDtoVoiceVisitor) error {
	if u.typ == "AzureVoice" || u.AzureVoice != nil {
		return visitor.VisitAzureVoice(u.AzureVoice)
	}
	if u.typ == "CartesiaVoice" || u.CartesiaVoice != nil {
		return visitor.VisitCartesiaVoice(u.CartesiaVoice)
	}
	if u.typ == "CustomVoice" || u.CustomVoice != nil {
		return visitor.VisitCustomVoice(u.CustomVoice)
	}
	if u.typ == "DeepgramVoice" || u.DeepgramVoice != nil {
		return visitor.VisitDeepgramVoice(u.DeepgramVoice)
	}
	if u.typ == "ElevenLabsVoice" || u.ElevenLabsVoice != nil {
		return visitor.VisitElevenLabsVoice(u.ElevenLabsVoice)
	}
	if u.typ == "HumeVoice" || u.HumeVoice != nil {
		return visitor.VisitHumeVoice(u.HumeVoice)
	}
	if u.typ == "LmntVoice" || u.LmntVoice != nil {
		return visitor.VisitLmntVoice(u.LmntVoice)
	}
	if u.typ == "NeuphonicVoice" || u.NeuphonicVoice != nil {
		return visitor.VisitNeuphonicVoice(u.NeuphonicVoice)
	}
	if u.typ == "OpenAiVoice" || u.OpenAiVoice != nil {
		return visitor.VisitOpenAiVoice(u.OpenAiVoice)
	}
	if u.typ == "PlayHtVoice" || u.PlayHtVoice != nil {
		return visitor.VisitPlayHtVoice(u.PlayHtVoice)
	}
	if u.typ == "RimeAiVoice" || u.RimeAiVoice != nil {
		return visitor.VisitRimeAiVoice(u.RimeAiVoice)
	}
	if u.typ == "SmallestAiVoice" || u.SmallestAiVoice != nil {
		return visitor.VisitSmallestAiVoice(u.SmallestAiVoice)
	}
	if u.typ == "TavusVoice" || u.TavusVoice != nil {
		return visitor.VisitTavusVoice(u.TavusVoice)
	}
	if u.typ == "VapiVoice" || u.VapiVoice != nil {
		return visitor.VisitVapiVoice(u.VapiVoice)
	}
	if u.typ == "SesameVoice" || u.SesameVoice != nil {
		return visitor.VisitSesameVoice(u.SesameVoice)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", u)
}
