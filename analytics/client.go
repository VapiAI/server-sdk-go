// This file was auto-generated by Fern from our API Definition.

package analytics

import (
	context "context"
	vapigosdk "github.com/fern-demo/vapi-go-sdk"
	core "github.com/fern-demo/vapi-go-sdk/core"
	option "github.com/fern-demo/vapi-go-sdk/option"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

func (c *Client) Get(
	ctx context.Context,
	request *vapigosdk.AnalyticsQueryDto,
	opts ...option.RequestOption,
) ([]*vapigosdk.AnalyticsQueryResult, error) {
	options := core.NewRequestOptions(opts...)

	baseURL := "https://api.vapi.ai"
	if c.baseURL != "" {
		baseURL = c.baseURL
	}
	if options.BaseURL != "" {
		baseURL = options.BaseURL
	}
	endpointURL := baseURL + "/analytics"

	headers := core.MergeHeaders(c.header.Clone(), options.ToHeader())
	headers.Set("Content-Type", "application/json")

	var response []*vapigosdk.AnalyticsQueryResult
	if err := c.caller.Call(
		ctx,
		&core.CallParams{
			URL:             endpointURL,
			Method:          http.MethodPost,
			MaxAttempts:     options.MaxAttempts,
			Headers:         headers,
			BodyProperties:  options.BodyProperties,
			QueryParameters: options.QueryParameters,
			Client:          options.HTTPClient,
			Request:         request,
			Response:        &response,
		},
	); err != nil {
		return nil, err
	}
	return response, nil
}
